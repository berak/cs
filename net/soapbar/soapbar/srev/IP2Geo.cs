//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.21006.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="IP2GeoSoap", Namespace="http://ws.cdyne.com/")]
public partial class IP2Geo : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback ResolveIPOperationCompleted;
    
    /// <remarks/>
    public IP2Geo() {
        this.Url = "http://ws.cdyne.com/ip2geo/ip2geo.asmx";
    }
    
    /// <remarks/>
    public event ResolveIPCompletedEventHandler ResolveIPCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.cdyne.com/ResolveIP", RequestNamespace="http://ws.cdyne.com/", ResponseNamespace="http://ws.cdyne.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public IPInformation ResolveIP(string ipAddress, string licenseKey) {
        object[] results = this.Invoke("ResolveIP", new object[] {
                    ipAddress,
                    licenseKey});
        return ((IPInformation)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginResolveIP(string ipAddress, string licenseKey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ResolveIP", new object[] {
                    ipAddress,
                    licenseKey}, callback, asyncState);
    }
    
    /// <remarks/>
    public IPInformation EndResolveIP(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((IPInformation)(results[0]));
    }
    
    /// <remarks/>
    public void ResolveIPAsync(string ipAddress, string licenseKey) {
        this.ResolveIPAsync(ipAddress, licenseKey, null);
    }
    
    /// <remarks/>
    public void ResolveIPAsync(string ipAddress, string licenseKey, object userState) {
        if ((this.ResolveIPOperationCompleted == null)) {
            this.ResolveIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveIPOperationCompleted);
        }
        this.InvokeAsync("ResolveIP", new object[] {
                    ipAddress,
                    licenseKey}, this.ResolveIPOperationCompleted, userState);
    }
    
    private void OnResolveIPOperationCompleted(object arg) {
        if ((this.ResolveIPCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ResolveIPCompleted(this, new ResolveIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/")]
public partial class IPInformation {
    
    private string cityField;
    
    private string stateProvinceField;
    
    private string countryField;
    
    private string organizationField;
    
    private double latitudeField;
    
    private double longitudeField;
    
    private string areaCodeField;
    
    private string timeZoneField;
    
    private bool hasDaylightSavingsField;
    
    private short certaintyField;
    
    private string regionNameField;
    
    private string countryCodeField;
    
    /// <remarks/>
    public string City {
        get {
            return this.cityField;
        }
        set {
            this.cityField = value;
        }
    }
    
    /// <remarks/>
    public string StateProvince {
        get {
            return this.stateProvinceField;
        }
        set {
            this.stateProvinceField = value;
        }
    }
    
    /// <remarks/>
    public string Country {
        get {
            return this.countryField;
        }
        set {
            this.countryField = value;
        }
    }
    
    /// <remarks/>
    public string Organization {
        get {
            return this.organizationField;
        }
        set {
            this.organizationField = value;
        }
    }
    
    /// <remarks/>
    public double Latitude {
        get {
            return this.latitudeField;
        }
        set {
            this.latitudeField = value;
        }
    }
    
    /// <remarks/>
    public double Longitude {
        get {
            return this.longitudeField;
        }
        set {
            this.longitudeField = value;
        }
    }
    
    /// <remarks/>
    public string AreaCode {
        get {
            return this.areaCodeField;
        }
        set {
            this.areaCodeField = value;
        }
    }
    
    /// <remarks/>
    public string TimeZone {
        get {
            return this.timeZoneField;
        }
        set {
            this.timeZoneField = value;
        }
    }
    
    /// <remarks/>
    public bool HasDaylightSavings {
        get {
            return this.hasDaylightSavingsField;
        }
        set {
            this.hasDaylightSavingsField = value;
        }
    }
    
    /// <remarks/>
    public short Certainty {
        get {
            return this.certaintyField;
        }
        set {
            this.certaintyField = value;
        }
    }
    
    /// <remarks/>
    public string RegionName {
        get {
            return this.regionNameField;
        }
        set {
            this.regionNameField = value;
        }
    }
    
    /// <remarks/>
    public string CountryCode {
        get {
            return this.countryCodeField;
        }
        set {
            this.countryCodeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void ResolveIPCompletedEventHandler(object sender, ResolveIPCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ResolveIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ResolveIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public IPInformation Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((IPInformation)(this.results[0]));
        }
    }
}
