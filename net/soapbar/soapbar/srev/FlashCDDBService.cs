//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.21006.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="FlashCDDBBinding", Namespace="urn:FlashCDDB")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TracksElement))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchElement))]
public partial class FlashCDDBService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback searchArtistListOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTrackListingOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAlbumInfoOperationCompleted;
    
    /// <remarks/>
    public FlashCDDBService() {
        this.Url = "http://www.flash-db.com/services/ws/flashCDDB.php";
    }
    
    /// <remarks/>
    public event searchArtistListCompletedEventHandler searchArtistListCompleted;
    
    /// <remarks/>
    public event getTrackListingCompletedEventHandler getTrackListingCompleted;
    
    /// <remarks/>
    public event getAlbumInfoCompletedEventHandler getAlbumInfoCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:FlashCDDBAction", RequestNamespace="urn:FlashCDDB", ResponseNamespace="urn:FlashCDDB")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public SearchResultArray searchArtistList(string username, string password, string query, string field) {
        object[] results = this.Invoke("searchArtistList", new object[] {
                    username,
                    password,
                    query,
                    field});
        return ((SearchResultArray)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsearchArtistList(string username, string password, string query, string field, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("searchArtistList", new object[] {
                    username,
                    password,
                    query,
                    field}, callback, asyncState);
    }
    
    /// <remarks/>
    public SearchResultArray EndsearchArtistList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((SearchResultArray)(results[0]));
    }
    
    /// <remarks/>
    public void searchArtistListAsync(string username, string password, string query, string field) {
        this.searchArtistListAsync(username, password, query, field, null);
    }
    
    /// <remarks/>
    public void searchArtistListAsync(string username, string password, string query, string field, object userState) {
        if ((this.searchArtistListOperationCompleted == null)) {
            this.searchArtistListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchArtistListOperationCompleted);
        }
        this.InvokeAsync("searchArtistList", new object[] {
                    username,
                    password,
                    query,
                    field}, this.searchArtistListOperationCompleted, userState);
    }
    
    private void OnsearchArtistListOperationCompleted(object arg) {
        if ((this.searchArtistListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.searchArtistListCompleted(this, new searchArtistListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:FlashCDDBAction", RequestNamespace="urn:FlashCDDB", ResponseNamespace="urn:FlashCDDB")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public TracksResultArray getTrackListing(string username, string password, string category, string cdID) {
        object[] results = this.Invoke("getTrackListing", new object[] {
                    username,
                    password,
                    category,
                    cdID});
        return ((TracksResultArray)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTrackListing(string username, string password, string category, string cdID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTrackListing", new object[] {
                    username,
                    password,
                    category,
                    cdID}, callback, asyncState);
    }
    
    /// <remarks/>
    public TracksResultArray EndgetTrackListing(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TracksResultArray)(results[0]));
    }
    
    /// <remarks/>
    public void getTrackListingAsync(string username, string password, string category, string cdID) {
        this.getTrackListingAsync(username, password, category, cdID, null);
    }
    
    /// <remarks/>
    public void getTrackListingAsync(string username, string password, string category, string cdID, object userState) {
        if ((this.getTrackListingOperationCompleted == null)) {
            this.getTrackListingOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackListingOperationCompleted);
        }
        this.InvokeAsync("getTrackListing", new object[] {
                    username,
                    password,
                    category,
                    cdID}, this.getTrackListingOperationCompleted, userState);
    }
    
    private void OngetTrackListingOperationCompleted(object arg) {
        if ((this.getTrackListingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTrackListingCompleted(this, new getTrackListingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:FlashCDDBAction", RequestNamespace="urn:FlashCDDB", ResponseNamespace="urn:FlashCDDB")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public AlbumInfoResult getAlbumInfo(string username, string password, string category, string cdID) {
        object[] results = this.Invoke("getAlbumInfo", new object[] {
                    username,
                    password,
                    category,
                    cdID});
        return ((AlbumInfoResult)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAlbumInfo(string username, string password, string category, string cdID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAlbumInfo", new object[] {
                    username,
                    password,
                    category,
                    cdID}, callback, asyncState);
    }
    
    /// <remarks/>
    public AlbumInfoResult EndgetAlbumInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((AlbumInfoResult)(results[0]));
    }
    
    /// <remarks/>
    public void getAlbumInfoAsync(string username, string password, string category, string cdID) {
        this.getAlbumInfoAsync(username, password, category, cdID, null);
    }
    
    /// <remarks/>
    public void getAlbumInfoAsync(string username, string password, string category, string cdID, object userState) {
        if ((this.getAlbumInfoOperationCompleted == null)) {
            this.getAlbumInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAlbumInfoOperationCompleted);
        }
        this.InvokeAsync("getAlbumInfo", new object[] {
                    username,
                    password,
                    category,
                    cdID}, this.getAlbumInfoOperationCompleted, userState);
    }
    
    private void OngetAlbumInfoOperationCompleted(object arg) {
        if ((this.getAlbumInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAlbumInfoCompleted(this, new getAlbumInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:FlashCDDB")]
public partial class SearchResultArray {
    
    private SearchElement[] searchElementsField;
    
    /// <remarks/>
    public SearchElement[] searchElements {
        get {
            return this.searchElementsField;
        }
        set {
            this.searchElementsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:FlashCDDB")]
public partial class SearchElement {
    
    private string categoryField;
    
    private string cdIDField;
    
    private string nameField;
    
    /// <remarks/>
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    public string cdID {
        get {
            return this.cdIDField;
        }
        set {
            this.cdIDField = value;
        }
    }
    
    /// <remarks/>
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:FlashCDDB")]
public partial class AlbumInfoResult {
    
    private string tracksField;
    
    private string totalTimeField;
    
    private string yearField;
    
    private string genreField;
    
    private string categoryIDField;
    
    /// <remarks/>
    public string tracks {
        get {
            return this.tracksField;
        }
        set {
            this.tracksField = value;
        }
    }
    
    /// <remarks/>
    public string totalTime {
        get {
            return this.totalTimeField;
        }
        set {
            this.totalTimeField = value;
        }
    }
    
    /// <remarks/>
    public string year {
        get {
            return this.yearField;
        }
        set {
            this.yearField = value;
        }
    }
    
    /// <remarks/>
    public string genre {
        get {
            return this.genreField;
        }
        set {
            this.genreField = value;
        }
    }
    
    /// <remarks/>
    public string categoryID {
        get {
            return this.categoryIDField;
        }
        set {
            this.categoryIDField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:FlashCDDB")]
public partial class TracksElement {
    
    private string numField;
    
    private string songlengthField;
    
    private string tracknameField;
    
    /// <remarks/>
    public string num {
        get {
            return this.numField;
        }
        set {
            this.numField = value;
        }
    }
    
    /// <remarks/>
    public string songlength {
        get {
            return this.songlengthField;
        }
        set {
            this.songlengthField = value;
        }
    }
    
    /// <remarks/>
    public string trackname {
        get {
            return this.tracknameField;
        }
        set {
            this.tracknameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:FlashCDDB")]
public partial class TracksResultArray {
    
    private TracksElement[] tracksElementsField;
    
    /// <remarks/>
    public TracksElement[] TracksElements {
        get {
            return this.tracksElementsField;
        }
        set {
            this.tracksElementsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void searchArtistListCompletedEventHandler(object sender, searchArtistListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class searchArtistListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal searchArtistListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public SearchResultArray Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((SearchResultArray)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void getTrackListingCompletedEventHandler(object sender, getTrackListingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTrackListingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTrackListingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TracksResultArray Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TracksResultArray)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void getAlbumInfoCompletedEventHandler(object sender, getAlbumInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAlbumInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAlbumInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public AlbumInfoResult Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((AlbumInfoResult)(this.results[0]));
        }
    }
}
