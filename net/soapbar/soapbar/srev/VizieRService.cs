//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.21006.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="VizieRSoapBinding", Namespace="urn:VizieR")]
public partial class VizieRService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback cataloguesMetaDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback cataloguesMetaData1OperationCompleted;
    
    private System.Threading.SendOrPostCallback cataloguesDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback cataloguesData1OperationCompleted;
    
    private System.Threading.SendOrPostCallback metaAllOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAvailabilityOperationCompleted;
    
    /// <remarks/>
    public VizieRService() {
        this.Url = "http://cdsws.u-strasbg.fr/axis/services/VizieR";
    }
    
    /// <remarks/>
    public event cataloguesMetaDataCompletedEventHandler cataloguesMetaDataCompleted;
    
    /// <remarks/>
    public event cataloguesMetaData1CompletedEventHandler cataloguesMetaData1Completed;
    
    /// <remarks/>
    public event cataloguesDataCompletedEventHandler cataloguesDataCompleted;
    
    /// <remarks/>
    public event cataloguesData1CompletedEventHandler cataloguesData1Completed;
    
    /// <remarks/>
    public event metaAllCompletedEventHandler metaAllCompleted;
    
    /// <remarks/>
    public event getAvailabilityCompletedEventHandler getAvailabilityCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:VizieR", ResponseNamespace="urn:VizieR")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string cataloguesMetaData(string target, double radius, string unit, string text) {
        object[] results = this.Invoke("cataloguesMetaData", new object[] {
                    target,
                    radius,
                    unit,
                    text});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincataloguesMetaData(string target, double radius, string unit, string text, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("cataloguesMetaData", new object[] {
                    target,
                    radius,
                    unit,
                    text}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndcataloguesMetaData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void cataloguesMetaDataAsync(string target, double radius, string unit, string text) {
        this.cataloguesMetaDataAsync(target, radius, unit, text, null);
    }
    
    /// <remarks/>
    public void cataloguesMetaDataAsync(string target, double radius, string unit, string text, object userState) {
        if ((this.cataloguesMetaDataOperationCompleted == null)) {
            this.cataloguesMetaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OncataloguesMetaDataOperationCompleted);
        }
        this.InvokeAsync("cataloguesMetaData", new object[] {
                    target,
                    radius,
                    unit,
                    text}, this.cataloguesMetaDataOperationCompleted, userState);
    }
    
    private void OncataloguesMetaDataOperationCompleted(object arg) {
        if ((this.cataloguesMetaDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.cataloguesMetaDataCompleted(this, new cataloguesMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute(MessageName="cataloguesMetaData1")]
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:VizieR", ResponseNamespace="urn:VizieR")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string cataloguesMetaData(string target, double radius, string unit, string text, string wavelength) {
        object[] results = this.Invoke("cataloguesMetaData1", new object[] {
                    target,
                    radius,
                    unit,
                    text,
                    wavelength});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincataloguesMetaData1(string target, double radius, string unit, string text, string wavelength, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("cataloguesMetaData1", new object[] {
                    target,
                    radius,
                    unit,
                    text,
                    wavelength}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndcataloguesMetaData1(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void cataloguesMetaData1Async(string target, double radius, string unit, string text, string wavelength) {
        this.cataloguesMetaData1Async(target, radius, unit, text, wavelength, null);
    }
    
    /// <remarks/>
    public void cataloguesMetaData1Async(string target, double radius, string unit, string text, string wavelength, object userState) {
        if ((this.cataloguesMetaData1OperationCompleted == null)) {
            this.cataloguesMetaData1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncataloguesMetaData1OperationCompleted);
        }
        this.InvokeAsync("cataloguesMetaData1", new object[] {
                    target,
                    radius,
                    unit,
                    text,
                    wavelength}, this.cataloguesMetaData1OperationCompleted, userState);
    }
    
    private void OncataloguesMetaData1OperationCompleted(object arg) {
        if ((this.cataloguesMetaData1Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.cataloguesMetaData1Completed(this, new cataloguesMetaData1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:VizieR", ResponseNamespace="urn:VizieR")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string cataloguesData(string target, double radius, string unit, string text) {
        object[] results = this.Invoke("cataloguesData", new object[] {
                    target,
                    radius,
                    unit,
                    text});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincataloguesData(string target, double radius, string unit, string text, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("cataloguesData", new object[] {
                    target,
                    radius,
                    unit,
                    text}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndcataloguesData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void cataloguesDataAsync(string target, double radius, string unit, string text) {
        this.cataloguesDataAsync(target, radius, unit, text, null);
    }
    
    /// <remarks/>
    public void cataloguesDataAsync(string target, double radius, string unit, string text, object userState) {
        if ((this.cataloguesDataOperationCompleted == null)) {
            this.cataloguesDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OncataloguesDataOperationCompleted);
        }
        this.InvokeAsync("cataloguesData", new object[] {
                    target,
                    radius,
                    unit,
                    text}, this.cataloguesDataOperationCompleted, userState);
    }
    
    private void OncataloguesDataOperationCompleted(object arg) {
        if ((this.cataloguesDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.cataloguesDataCompleted(this, new cataloguesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute(MessageName="cataloguesData1")]
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:VizieR", ResponseNamespace="urn:VizieR")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string cataloguesData(string target, double radius, string unit, string text, string wavelength) {
        object[] results = this.Invoke("cataloguesData1", new object[] {
                    target,
                    radius,
                    unit,
                    text,
                    wavelength});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincataloguesData1(string target, double radius, string unit, string text, string wavelength, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("cataloguesData1", new object[] {
                    target,
                    radius,
                    unit,
                    text,
                    wavelength}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndcataloguesData1(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void cataloguesData1Async(string target, double radius, string unit, string text, string wavelength) {
        this.cataloguesData1Async(target, radius, unit, text, wavelength, null);
    }
    
    /// <remarks/>
    public void cataloguesData1Async(string target, double radius, string unit, string text, string wavelength, object userState) {
        if ((this.cataloguesData1OperationCompleted == null)) {
            this.cataloguesData1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncataloguesData1OperationCompleted);
        }
        this.InvokeAsync("cataloguesData1", new object[] {
                    target,
                    radius,
                    unit,
                    text,
                    wavelength}, this.cataloguesData1OperationCompleted, userState);
    }
    
    private void OncataloguesData1OperationCompleted(object arg) {
        if ((this.cataloguesData1Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.cataloguesData1Completed(this, new cataloguesData1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:VizieR", ResponseNamespace="urn:VizieR")]
    [return: System.Xml.Serialization.SoapElementAttribute("return")]
    public string metaAll() {
        object[] results = this.Invoke("metaAll", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmetaAll(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("metaAll", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndmetaAll(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void metaAllAsync() {
        this.metaAllAsync(null);
    }
    
    /// <remarks/>
    public void metaAllAsync(object userState) {
        if ((this.metaAllOperationCompleted == null)) {
            this.metaAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmetaAllOperationCompleted);
        }
        this.InvokeAsync("metaAll", new object[0], this.metaAllOperationCompleted, userState);
    }
    
    private void OnmetaAllOperationCompleted(object arg) {
        if ((this.metaAllCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.metaAllCompleted(this, new metaAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="urn:VizieR")]
    [return: System.Xml.Serialization.SoapElementAttribute("getAvailabilityReturn")]
    public string getAvailability() {
        object[] results = this.Invoke("getAvailability", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAvailability(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAvailability", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetAvailability(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getAvailabilityAsync() {
        this.getAvailabilityAsync(null);
    }
    
    /// <remarks/>
    public void getAvailabilityAsync(object userState) {
        if ((this.getAvailabilityOperationCompleted == null)) {
            this.getAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailabilityOperationCompleted);
        }
        this.InvokeAsync("getAvailability", new object[0], this.getAvailabilityOperationCompleted, userState);
    }
    
    private void OngetAvailabilityOperationCompleted(object arg) {
        if ((this.getAvailabilityCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAvailabilityCompleted(this, new getAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void cataloguesMetaDataCompletedEventHandler(object sender, cataloguesMetaDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class cataloguesMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal cataloguesMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void cataloguesMetaData1CompletedEventHandler(object sender, cataloguesMetaData1CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class cataloguesMetaData1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal cataloguesMetaData1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void cataloguesDataCompletedEventHandler(object sender, cataloguesDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class cataloguesDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal cataloguesDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void cataloguesData1CompletedEventHandler(object sender, cataloguesData1CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class cataloguesData1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal cataloguesData1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void metaAllCompletedEventHandler(object sender, metaAllCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class metaAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal metaAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void getAvailabilityCompletedEventHandler(object sender, getAvailabilityCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
