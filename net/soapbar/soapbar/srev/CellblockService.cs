//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.21006.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.21006.1.
// 


/// <remarks/>
// CODEGEN: The operation binding 'UploadAd' from namespace 'http://www.cellblock.com/api/web_services/?WSDL' was ignored.  Missing soap:body input binding.
// CODEGEN: The operation binding 'UploadFile' from namespace 'http://www.cellblock.com/api/web_services/?WSDL' was ignored.  Missing soap:body input binding.
// CODEGEN: The operation binding 'UploadFrame' from namespace 'http://www.cellblock.com/api/web_services/?WSDL' was ignored.  Missing soap:body input binding.
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="CellblockSoapBinding", Namespace="http://www.cellblock.com/api/web_services/?WSDL")]
public partial class CellblockService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback AcceptedFrameInfoForCellblockOperationCompleted;
    
    private System.Threading.SendOrPostCallback AdInfoForCampaignOperationCompleted;
    
    private System.Threading.SendOrPostCallback AddExternalFrameOperationCompleted;
    
    private System.Threading.SendOrPostCallback ApprovePendingFrameOperationCompleted;
    
    private System.Threading.SendOrPostCallback CellblockIdsForUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback CellblockInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback ConvertFrameOperationCompleted;
    
    private System.Threading.SendOrPostCallback CopyFrameOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateAdCampaignOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateCellblockOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateCellblockAttributeDefinitionOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateDisplayModelOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateFrameAttributeDefinitionOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateRealmOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateRealmAttributeDefinitionOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateRealmCellblockOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateUserAttributeDefinitionOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteAdOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteAdCampaignOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteAttributeDefinitionOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteCellblockOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteCommentOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteDisplayModelOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteFrameOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback EmailDispositionOperationCompleted;
    
    private System.Threading.SendOrPostCallback FrameInfoForCellblockOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAdCampaignsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAnnotationOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAttributeDefinitionsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCellblockAttributeValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCellblockAttributeValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCellblockInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCommentsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDisplayModelOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDisplayModelsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDocumentationOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetEventInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetFrameAttributeValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetFrameAttributeValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetFrameInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetFramesNewerThanOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetImageFilterInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetLanguageFilterInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetMatchingCellblocksOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetMatchingFramesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetMatchingUsersOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetMediaFilterInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPublicApiMethodsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetRatingOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetRealmAttributeValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetRealmAttributeValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetRealmCellblocksOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetRealmInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetSessionInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUserAttributeValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUserAttributeValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUserCellblocksOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUserFramesOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetUsersInRealmOperationCompleted;
    
    private System.Threading.SendOrPostCallback LatestFramesAcrossRealmOperationCompleted;
    
    private System.Threading.SendOrPostCallback LatestFramesForUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback LoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback LogoutOperationCompleted;
    
    private System.Threading.SendOrPostCallback LookupFramesOperationCompleted;
    
    private System.Threading.SendOrPostCallback ModerateImageFilterOperationCompleted;
    
    private System.Threading.SendOrPostCallback MoreOperationCompleted;
    
    private System.Threading.SendOrPostCallback MoveApprovedFrameOperationCompleted;
    
    private System.Threading.SendOrPostCallback NumAcceptedFramesOperationCompleted;
    
    private System.Threading.SendOrPostCallback NumFramesOperationCompleted;
    
    private System.Threading.SendOrPostCallback NumPendingFramesOperationCompleted;
    
    private System.Threading.SendOrPostCallback ParseSpreadsheetOperationCompleted;
    
    private System.Threading.SendOrPostCallback PendingFrameInfoForCellblockOperationCompleted;
    
    private System.Threading.SendOrPostCallback PingOperationCompleted;
    
    private System.Threading.SendOrPostCallback PostCommentOperationCompleted;
    
    private System.Threading.SendOrPostCallback PublishCellblockEmailAddressOperationCompleted;
    
    private System.Threading.SendOrPostCallback RealmLoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback RefreshExternalFrameOperationCompleted;
    
    private System.Threading.SendOrPostCallback RotateFrameLeftOperationCompleted;
    
    private System.Threading.SendOrPostCallback RotateFrameRightOperationCompleted;
    
    private System.Threading.SendOrPostCallback SendCellblockToPhoneOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetActiveAdCampaignOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetAnnotationOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetCellblockAttributeValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetCellblockInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetCellblockInfoExtendedOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetDisplayModelOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetExternalEmailAddressOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetFrameAttributeValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetFrameCaptionOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetFrameInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetFrameVisibilityOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetImageFilterInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetLanguageFilterInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetMediaFilterInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetPendingFrameOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetPreviewStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetRatingOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetRealmAttributeValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetRealmInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetUserAttributeValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetUserInfoOperationCompleted;
    
    private System.Threading.SendOrPostCallback UploadRemoteFrameOperationCompleted;
    
    /// <remarks/>
    public CellblockService() {
        this.Url = "http://www.cellblock.com:80/api/soap/?";
    }
    
    /// <remarks/>
    public event AcceptedFrameInfoForCellblockCompletedEventHandler AcceptedFrameInfoForCellblockCompleted;
    
    /// <remarks/>
    public event AdInfoForCampaignCompletedEventHandler AdInfoForCampaignCompleted;
    
    /// <remarks/>
    public event AddExternalFrameCompletedEventHandler AddExternalFrameCompleted;
    
    /// <remarks/>
    public event ApprovePendingFrameCompletedEventHandler ApprovePendingFrameCompleted;
    
    /// <remarks/>
    public event CellblockIdsForUserCompletedEventHandler CellblockIdsForUserCompleted;
    
    /// <remarks/>
    public event CellblockInfoCompletedEventHandler CellblockInfoCompleted;
    
    /// <remarks/>
    public event ConvertFrameCompletedEventHandler ConvertFrameCompleted;
    
    /// <remarks/>
    public event CopyFrameCompletedEventHandler CopyFrameCompleted;
    
    /// <remarks/>
    public event CreateAdCampaignCompletedEventHandler CreateAdCampaignCompleted;
    
    /// <remarks/>
    public event CreateCellblockCompletedEventHandler CreateCellblockCompleted;
    
    /// <remarks/>
    public event CreateCellblockAttributeDefinitionCompletedEventHandler CreateCellblockAttributeDefinitionCompleted;
    
    /// <remarks/>
    public event CreateDisplayModelCompletedEventHandler CreateDisplayModelCompleted;
    
    /// <remarks/>
    public event CreateFrameAttributeDefinitionCompletedEventHandler CreateFrameAttributeDefinitionCompleted;
    
    /// <remarks/>
    public event CreateRealmCompletedEventHandler CreateRealmCompleted;
    
    /// <remarks/>
    public event CreateRealmAttributeDefinitionCompletedEventHandler CreateRealmAttributeDefinitionCompleted;
    
    /// <remarks/>
    public event CreateRealmCellblockCompletedEventHandler CreateRealmCellblockCompleted;
    
    /// <remarks/>
    public event CreateUserCompletedEventHandler CreateUserCompleted;
    
    /// <remarks/>
    public event CreateUserAttributeDefinitionCompletedEventHandler CreateUserAttributeDefinitionCompleted;
    
    /// <remarks/>
    public event DeleteAdCompletedEventHandler DeleteAdCompleted;
    
    /// <remarks/>
    public event DeleteAdCampaignCompletedEventHandler DeleteAdCampaignCompleted;
    
    /// <remarks/>
    public event DeleteAttributeDefinitionCompletedEventHandler DeleteAttributeDefinitionCompleted;
    
    /// <remarks/>
    public event DeleteCellblockCompletedEventHandler DeleteCellblockCompleted;
    
    /// <remarks/>
    public event DeleteCommentCompletedEventHandler DeleteCommentCompleted;
    
    /// <remarks/>
    public event DeleteDisplayModelCompletedEventHandler DeleteDisplayModelCompleted;
    
    /// <remarks/>
    public event DeleteFrameCompletedEventHandler DeleteFrameCompleted;
    
    /// <remarks/>
    public event DeleteUserCompletedEventHandler DeleteUserCompleted;
    
    /// <remarks/>
    public event EmailDispositionCompletedEventHandler EmailDispositionCompleted;
    
    /// <remarks/>
    public event FrameInfoForCellblockCompletedEventHandler FrameInfoForCellblockCompleted;
    
    /// <remarks/>
    public event GetAdCampaignsCompletedEventHandler GetAdCampaignsCompleted;
    
    /// <remarks/>
    public event GetAnnotationCompletedEventHandler GetAnnotationCompleted;
    
    /// <remarks/>
    public event GetAttributeDefinitionsCompletedEventHandler GetAttributeDefinitionsCompleted;
    
    /// <remarks/>
    public event GetCellblockAttributeValueCompletedEventHandler GetCellblockAttributeValueCompleted;
    
    /// <remarks/>
    public event GetCellblockAttributeValuesCompletedEventHandler GetCellblockAttributeValuesCompleted;
    
    /// <remarks/>
    public event GetCellblockInfoCompletedEventHandler GetCellblockInfoCompleted;
    
    /// <remarks/>
    public event GetCommentsCompletedEventHandler GetCommentsCompleted;
    
    /// <remarks/>
    public event GetDisplayModelCompletedEventHandler GetDisplayModelCompleted;
    
    /// <remarks/>
    public event GetDisplayModelsCompletedEventHandler GetDisplayModelsCompleted;
    
    /// <remarks/>
    public event GetDocumentationCompletedEventHandler GetDocumentationCompleted;
    
    /// <remarks/>
    public event GetEventInfoCompletedEventHandler GetEventInfoCompleted;
    
    /// <remarks/>
    public event GetFrameAttributeValueCompletedEventHandler GetFrameAttributeValueCompleted;
    
    /// <remarks/>
    public event GetFrameAttributeValuesCompletedEventHandler GetFrameAttributeValuesCompleted;
    
    /// <remarks/>
    public event GetFrameInfoCompletedEventHandler GetFrameInfoCompleted;
    
    /// <remarks/>
    public event GetFramesNewerThanCompletedEventHandler GetFramesNewerThanCompleted;
    
    /// <remarks/>
    public event GetImageFilterInfoCompletedEventHandler GetImageFilterInfoCompleted;
    
    /// <remarks/>
    public event GetLanguageFilterInfoCompletedEventHandler GetLanguageFilterInfoCompleted;
    
    /// <remarks/>
    public event GetMatchingCellblocksCompletedEventHandler GetMatchingCellblocksCompleted;
    
    /// <remarks/>
    public event GetMatchingFramesCompletedEventHandler GetMatchingFramesCompleted;
    
    /// <remarks/>
    public event GetMatchingUsersCompletedEventHandler GetMatchingUsersCompleted;
    
    /// <remarks/>
    public event GetMediaFilterInfoCompletedEventHandler GetMediaFilterInfoCompleted;
    
    /// <remarks/>
    public event GetPublicApiMethodsCompletedEventHandler GetPublicApiMethodsCompleted;
    
    /// <remarks/>
    public event GetRatingCompletedEventHandler GetRatingCompleted;
    
    /// <remarks/>
    public event GetRealmAttributeValueCompletedEventHandler GetRealmAttributeValueCompleted;
    
    /// <remarks/>
    public event GetRealmAttributeValuesCompletedEventHandler GetRealmAttributeValuesCompleted;
    
    /// <remarks/>
    public event GetRealmCellblocksCompletedEventHandler GetRealmCellblocksCompleted;
    
    /// <remarks/>
    public event GetRealmInfoCompletedEventHandler GetRealmInfoCompleted;
    
    /// <remarks/>
    public event GetSessionInfoCompletedEventHandler GetSessionInfoCompleted;
    
    /// <remarks/>
    public event GetUserAttributeValueCompletedEventHandler GetUserAttributeValueCompleted;
    
    /// <remarks/>
    public event GetUserAttributeValuesCompletedEventHandler GetUserAttributeValuesCompleted;
    
    /// <remarks/>
    public event GetUserCellblocksCompletedEventHandler GetUserCellblocksCompleted;
    
    /// <remarks/>
    public event GetUserFramesCompletedEventHandler GetUserFramesCompleted;
    
    /// <remarks/>
    public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
    
    /// <remarks/>
    public event GetUsersInRealmCompletedEventHandler GetUsersInRealmCompleted;
    
    /// <remarks/>
    public event LatestFramesAcrossRealmCompletedEventHandler LatestFramesAcrossRealmCompleted;
    
    /// <remarks/>
    public event LatestFramesForUserCompletedEventHandler LatestFramesForUserCompleted;
    
    /// <remarks/>
    public event LoginCompletedEventHandler LoginCompleted;
    
    /// <remarks/>
    public event LogoutCompletedEventHandler LogoutCompleted;
    
    /// <remarks/>
    public event LookupFramesCompletedEventHandler LookupFramesCompleted;
    
    /// <remarks/>
    public event ModerateImageFilterCompletedEventHandler ModerateImageFilterCompleted;
    
    /// <remarks/>
    public event MoreCompletedEventHandler MoreCompleted;
    
    /// <remarks/>
    public event MoveApprovedFrameCompletedEventHandler MoveApprovedFrameCompleted;
    
    /// <remarks/>
    public event NumAcceptedFramesCompletedEventHandler NumAcceptedFramesCompleted;
    
    /// <remarks/>
    public event NumFramesCompletedEventHandler NumFramesCompleted;
    
    /// <remarks/>
    public event NumPendingFramesCompletedEventHandler NumPendingFramesCompleted;
    
    /// <remarks/>
    public event ParseSpreadsheetCompletedEventHandler ParseSpreadsheetCompleted;
    
    /// <remarks/>
    public event PendingFrameInfoForCellblockCompletedEventHandler PendingFrameInfoForCellblockCompleted;
    
    /// <remarks/>
    public event PingCompletedEventHandler PingCompleted;
    
    /// <remarks/>
    public event PostCommentCompletedEventHandler PostCommentCompleted;
    
    /// <remarks/>
    public event PublishCellblockEmailAddressCompletedEventHandler PublishCellblockEmailAddressCompleted;
    
    /// <remarks/>
    public event RealmLoginCompletedEventHandler RealmLoginCompleted;
    
    /// <remarks/>
    public event RefreshExternalFrameCompletedEventHandler RefreshExternalFrameCompleted;
    
    /// <remarks/>
    public event RotateFrameLeftCompletedEventHandler RotateFrameLeftCompleted;
    
    /// <remarks/>
    public event RotateFrameRightCompletedEventHandler RotateFrameRightCompleted;
    
    /// <remarks/>
    public event SendCellblockToPhoneCompletedEventHandler SendCellblockToPhoneCompleted;
    
    /// <remarks/>
    public event SetActiveAdCampaignCompletedEventHandler SetActiveAdCampaignCompleted;
    
    /// <remarks/>
    public event SetAnnotationCompletedEventHandler SetAnnotationCompleted;
    
    /// <remarks/>
    public event SetCellblockAttributeValueCompletedEventHandler SetCellblockAttributeValueCompleted;
    
    /// <remarks/>
    public event SetCellblockInfoCompletedEventHandler SetCellblockInfoCompleted;
    
    /// <remarks/>
    public event SetCellblockInfoExtendedCompletedEventHandler SetCellblockInfoExtendedCompleted;
    
    /// <remarks/>
    public event SetDisplayModelCompletedEventHandler SetDisplayModelCompleted;
    
    /// <remarks/>
    public event SetExternalEmailAddressCompletedEventHandler SetExternalEmailAddressCompleted;
    
    /// <remarks/>
    public event SetFrameAttributeValueCompletedEventHandler SetFrameAttributeValueCompleted;
    
    /// <remarks/>
    public event SetFrameCaptionCompletedEventHandler SetFrameCaptionCompleted;
    
    /// <remarks/>
    public event SetFrameInfoCompletedEventHandler SetFrameInfoCompleted;
    
    /// <remarks/>
    public event SetFrameVisibilityCompletedEventHandler SetFrameVisibilityCompleted;
    
    /// <remarks/>
    public event SetImageFilterInfoCompletedEventHandler SetImageFilterInfoCompleted;
    
    /// <remarks/>
    public event SetLanguageFilterInfoCompletedEventHandler SetLanguageFilterInfoCompleted;
    
    /// <remarks/>
    public event SetMediaFilterInfoCompletedEventHandler SetMediaFilterInfoCompleted;
    
    /// <remarks/>
    public event SetPendingFrameCompletedEventHandler SetPendingFrameCompleted;
    
    /// <remarks/>
    public event SetPreviewStatusCompletedEventHandler SetPreviewStatusCompleted;
    
    /// <remarks/>
    public event SetRatingCompletedEventHandler SetRatingCompleted;
    
    /// <remarks/>
    public event SetRealmAttributeValueCompletedEventHandler SetRealmAttributeValueCompleted;
    
    /// <remarks/>
    public event SetRealmInfoCompletedEventHandler SetRealmInfoCompleted;
    
    /// <remarks/>
    public event SetUserAttributeValueCompletedEventHandler SetUserAttributeValueCompleted;
    
    /// <remarks/>
    public event SetUserInfoCompletedEventHandler SetUserInfoCompleted;
    
    /// <remarks/>
    public event UploadRemoteFrameCompletedEventHandler UploadRemoteFrameCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("frames")]
    public ArrayOfAnything AcceptedFrameInfoForCellblock(string apiKey, string id, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count) {
        object[] results = this.Invoke("AcceptedFrameInfoForCellblock", new object[] {
                    apiKey,
                    id,
                    offset,
                    count});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAcceptedFrameInfoForCellblock(string apiKey, string id, string offset, string count, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AcceptedFrameInfoForCellblock", new object[] {
                    apiKey,
                    id,
                    offset,
                    count}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndAcceptedFrameInfoForCellblock(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void AcceptedFrameInfoForCellblockAsync(string apiKey, string id, string offset, string count) {
        this.AcceptedFrameInfoForCellblockAsync(apiKey, id, offset, count, null);
    }
    
    /// <remarks/>
    public void AcceptedFrameInfoForCellblockAsync(string apiKey, string id, string offset, string count, object userState) {
        if ((this.AcceptedFrameInfoForCellblockOperationCompleted == null)) {
            this.AcceptedFrameInfoForCellblockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptedFrameInfoForCellblockOperationCompleted);
        }
        this.InvokeAsync("AcceptedFrameInfoForCellblock", new object[] {
                    apiKey,
                    id,
                    offset,
                    count}, this.AcceptedFrameInfoForCellblockOperationCompleted, userState);
    }
    
    private void OnAcceptedFrameInfoForCellblockOperationCompleted(object arg) {
        if ((this.AcceptedFrameInfoForCellblockCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AcceptedFrameInfoForCellblockCompleted(this, new AcceptedFrameInfoForCellblockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("ads")]
    public ArrayOfAnything AdInfoForCampaign(string apiKey, string id, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count) {
        object[] results = this.Invoke("AdInfoForCampaign", new object[] {
                    apiKey,
                    id,
                    offset,
                    count});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAdInfoForCampaign(string apiKey, string id, string offset, string count, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AdInfoForCampaign", new object[] {
                    apiKey,
                    id,
                    offset,
                    count}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndAdInfoForCampaign(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void AdInfoForCampaignAsync(string apiKey, string id, string offset, string count) {
        this.AdInfoForCampaignAsync(apiKey, id, offset, count, null);
    }
    
    /// <remarks/>
    public void AdInfoForCampaignAsync(string apiKey, string id, string offset, string count, object userState) {
        if ((this.AdInfoForCampaignOperationCompleted == null)) {
            this.AdInfoForCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdInfoForCampaignOperationCompleted);
        }
        this.InvokeAsync("AdInfoForCampaign", new object[] {
                    apiKey,
                    id,
                    offset,
                    count}, this.AdInfoForCampaignOperationCompleted, userState);
    }
    
    private void OnAdInfoForCampaignOperationCompleted(object arg) {
        if ((this.AdInfoForCampaignCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AdInfoForCampaignCompleted(this, new AdInfoForCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void AddExternalFrame(string apiKey, ref string id, string caption, string url, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string index) {
        object[] results = this.Invoke("AddExternalFrame", new object[] {
                    apiKey,
                    id,
                    caption,
                    url,
                    index});
        id = ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginAddExternalFrame(string apiKey, string id, string caption, string url, string index, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("AddExternalFrame", new object[] {
                    apiKey,
                    id,
                    caption,
                    url,
                    index}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndAddExternalFrame(System.IAsyncResult asyncResult, out string id) {
        object[] results = this.EndInvoke(asyncResult);
        id = ((string)(results[0]));
    }
    
    /// <remarks/>
    public void AddExternalFrameAsync(string apiKey, string id, string caption, string url, string index) {
        this.AddExternalFrameAsync(apiKey, id, caption, url, index, null);
    }
    
    /// <remarks/>
    public void AddExternalFrameAsync(string apiKey, string id, string caption, string url, string index, object userState) {
        if ((this.AddExternalFrameOperationCompleted == null)) {
            this.AddExternalFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddExternalFrameOperationCompleted);
        }
        this.InvokeAsync("AddExternalFrame", new object[] {
                    apiKey,
                    id,
                    caption,
                    url,
                    index}, this.AddExternalFrameOperationCompleted, userState);
    }
    
    private void OnAddExternalFrameOperationCompleted(object arg) {
        if ((this.AddExternalFrameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.AddExternalFrameCompleted(this, new AddExternalFrameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void ApprovePendingFrame(string apiKey, string id) {
        this.Invoke("ApprovePendingFrame", new object[] {
                    apiKey,
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginApprovePendingFrame(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ApprovePendingFrame", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndApprovePendingFrame(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void ApprovePendingFrameAsync(string apiKey, string id) {
        this.ApprovePendingFrameAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void ApprovePendingFrameAsync(string apiKey, string id, object userState) {
        if ((this.ApprovePendingFrameOperationCompleted == null)) {
            this.ApprovePendingFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprovePendingFrameOperationCompleted);
        }
        this.InvokeAsync("ApprovePendingFrame", new object[] {
                    apiKey,
                    id}, this.ApprovePendingFrameOperationCompleted, userState);
    }
    
    private void OnApprovePendingFrameOperationCompleted(object arg) {
        if ((this.ApprovePendingFrameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ApprovePendingFrameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("ids")]
    public ArrayOfString CellblockIdsForUser(string apiKey, string screenName, string realmId) {
        object[] results = this.Invoke("CellblockIdsForUser", new object[] {
                    apiKey,
                    screenName,
                    realmId});
        return ((ArrayOfString)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCellblockIdsForUser(string apiKey, string screenName, string realmId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CellblockIdsForUser", new object[] {
                    apiKey,
                    screenName,
                    realmId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfString EndCellblockIdsForUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfString)(results[0]));
    }
    
    /// <remarks/>
    public void CellblockIdsForUserAsync(string apiKey, string screenName, string realmId) {
        this.CellblockIdsForUserAsync(apiKey, screenName, realmId, null);
    }
    
    /// <remarks/>
    public void CellblockIdsForUserAsync(string apiKey, string screenName, string realmId, object userState) {
        if ((this.CellblockIdsForUserOperationCompleted == null)) {
            this.CellblockIdsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCellblockIdsForUserOperationCompleted);
        }
        this.InvokeAsync("CellblockIdsForUser", new object[] {
                    apiKey,
                    screenName,
                    realmId}, this.CellblockIdsForUserOperationCompleted, userState);
    }
    
    private void OnCellblockIdsForUserOperationCompleted(object arg) {
        if ((this.CellblockIdsForUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CellblockIdsForUserCompleted(this, new CellblockIdsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object CellblockInfo(string apiKey, string id) {
        object[] results = this.Invoke("CellblockInfo", new object[] {
                    apiKey,
                    id});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCellblockInfo(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CellblockInfo", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndCellblockInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void CellblockInfoAsync(string apiKey, string id) {
        this.CellblockInfoAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void CellblockInfoAsync(string apiKey, string id, object userState) {
        if ((this.CellblockInfoOperationCompleted == null)) {
            this.CellblockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCellblockInfoOperationCompleted);
        }
        this.InvokeAsync("CellblockInfo", new object[] {
                    apiKey,
                    id}, this.CellblockInfoOperationCompleted, userState);
    }
    
    private void OnCellblockInfoOperationCompleted(object arg) {
        if ((this.CellblockInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CellblockInfoCompleted(this, new CellblockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object ConvertFrame(string frameId) {
        object[] results = this.Invoke("ConvertFrame", new object[] {
                    frameId});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginConvertFrame(string frameId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ConvertFrame", new object[] {
                    frameId}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndConvertFrame(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void ConvertFrameAsync(string frameId) {
        this.ConvertFrameAsync(frameId, null);
    }
    
    /// <remarks/>
    public void ConvertFrameAsync(string frameId, object userState) {
        if ((this.ConvertFrameOperationCompleted == null)) {
            this.ConvertFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertFrameOperationCompleted);
        }
        this.InvokeAsync("ConvertFrame", new object[] {
                    frameId}, this.ConvertFrameOperationCompleted, userState);
    }
    
    private void OnConvertFrameOperationCompleted(object arg) {
        if ((this.ConvertFrameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ConvertFrameCompleted(this, new ConvertFrameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object CopyFrame(string apiKey, string frameId, string cellblockId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string position, string addMode) {
        object[] results = this.Invoke("CopyFrame", new object[] {
                    apiKey,
                    frameId,
                    cellblockId,
                    position,
                    addMode});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCopyFrame(string apiKey, string frameId, string cellblockId, string position, string addMode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CopyFrame", new object[] {
                    apiKey,
                    frameId,
                    cellblockId,
                    position,
                    addMode}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndCopyFrame(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void CopyFrameAsync(string apiKey, string frameId, string cellblockId, string position, string addMode) {
        this.CopyFrameAsync(apiKey, frameId, cellblockId, position, addMode, null);
    }
    
    /// <remarks/>
    public void CopyFrameAsync(string apiKey, string frameId, string cellblockId, string position, string addMode, object userState) {
        if ((this.CopyFrameOperationCompleted == null)) {
            this.CopyFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyFrameOperationCompleted);
        }
        this.InvokeAsync("CopyFrame", new object[] {
                    apiKey,
                    frameId,
                    cellblockId,
                    position,
                    addMode}, this.CopyFrameOperationCompleted, userState);
    }
    
    private void OnCopyFrameOperationCompleted(object arg) {
        if ((this.CopyFrameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CopyFrameCompleted(this, new CopyFrameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("id")]
    public string CreateAdCampaign(string apiKey, string realmId, string name) {
        object[] results = this.Invoke("CreateAdCampaign", new object[] {
                    apiKey,
                    realmId,
                    name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateAdCampaign(string apiKey, string realmId, string name, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateAdCampaign", new object[] {
                    apiKey,
                    realmId,
                    name}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCreateAdCampaign(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CreateAdCampaignAsync(string apiKey, string realmId, string name) {
        this.CreateAdCampaignAsync(apiKey, realmId, name, null);
    }
    
    /// <remarks/>
    public void CreateAdCampaignAsync(string apiKey, string realmId, string name, object userState) {
        if ((this.CreateAdCampaignOperationCompleted == null)) {
            this.CreateAdCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAdCampaignOperationCompleted);
        }
        this.InvokeAsync("CreateAdCampaign", new object[] {
                    apiKey,
                    realmId,
                    name}, this.CreateAdCampaignOperationCompleted, userState);
    }
    
    private void OnCreateAdCampaignOperationCompleted(object arg) {
        if ((this.CreateAdCampaignCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateAdCampaignCompleted(this, new CreateAdCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("id")]
    public string CreateCellblock(string apiKey, string title, string email) {
        object[] results = this.Invoke("CreateCellblock", new object[] {
                    apiKey,
                    title,
                    email});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateCellblock(string apiKey, string title, string email, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateCellblock", new object[] {
                    apiKey,
                    title,
                    email}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCreateCellblock(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CreateCellblockAsync(string apiKey, string title, string email) {
        this.CreateCellblockAsync(apiKey, title, email, null);
    }
    
    /// <remarks/>
    public void CreateCellblockAsync(string apiKey, string title, string email, object userState) {
        if ((this.CreateCellblockOperationCompleted == null)) {
            this.CreateCellblockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCellblockOperationCompleted);
        }
        this.InvokeAsync("CreateCellblock", new object[] {
                    apiKey,
                    title,
                    email}, this.CreateCellblockOperationCompleted, userState);
    }
    
    private void OnCreateCellblockOperationCompleted(object arg) {
        if ((this.CreateCellblockCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateCellblockCompleted(this, new CreateCellblockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void CreateCellblockAttributeDefinition(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic) {
        this.Invoke("CreateCellblockAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateCellblockAttributeDefinition(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateCellblockAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndCreateCellblockAttributeDefinition(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void CreateCellblockAttributeDefinitionAsync(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic) {
        this.CreateCellblockAttributeDefinitionAsync(apiKey, realmId, attributeName, attributeType, isPublic, null);
    }
    
    /// <remarks/>
    public void CreateCellblockAttributeDefinitionAsync(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic, object userState) {
        if ((this.CreateCellblockAttributeDefinitionOperationCompleted == null)) {
            this.CreateCellblockAttributeDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCellblockAttributeDefinitionOperationCompleted);
        }
        this.InvokeAsync("CreateCellblockAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic}, this.CreateCellblockAttributeDefinitionOperationCompleted, userState);
    }
    
    private void OnCreateCellblockAttributeDefinitionOperationCompleted(object arg) {
        if ((this.CreateCellblockAttributeDefinitionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateCellblockAttributeDefinitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object CreateDisplayModel(string apiKey, string name, string realmId, string screenName, string mobile, string attributeList) {
        object[] results = this.Invoke("CreateDisplayModel", new object[] {
                    apiKey,
                    name,
                    realmId,
                    screenName,
                    mobile,
                    attributeList});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateDisplayModel(string apiKey, string name, string realmId, string screenName, string mobile, string attributeList, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateDisplayModel", new object[] {
                    apiKey,
                    name,
                    realmId,
                    screenName,
                    mobile,
                    attributeList}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndCreateDisplayModel(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void CreateDisplayModelAsync(string apiKey, string name, string realmId, string screenName, string mobile, string attributeList) {
        this.CreateDisplayModelAsync(apiKey, name, realmId, screenName, mobile, attributeList, null);
    }
    
    /// <remarks/>
    public void CreateDisplayModelAsync(string apiKey, string name, string realmId, string screenName, string mobile, string attributeList, object userState) {
        if ((this.CreateDisplayModelOperationCompleted == null)) {
            this.CreateDisplayModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDisplayModelOperationCompleted);
        }
        this.InvokeAsync("CreateDisplayModel", new object[] {
                    apiKey,
                    name,
                    realmId,
                    screenName,
                    mobile,
                    attributeList}, this.CreateDisplayModelOperationCompleted, userState);
    }
    
    private void OnCreateDisplayModelOperationCompleted(object arg) {
        if ((this.CreateDisplayModelCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateDisplayModelCompleted(this, new CreateDisplayModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void CreateFrameAttributeDefinition(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic) {
        this.Invoke("CreateFrameAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateFrameAttributeDefinition(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateFrameAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndCreateFrameAttributeDefinition(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void CreateFrameAttributeDefinitionAsync(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic) {
        this.CreateFrameAttributeDefinitionAsync(apiKey, realmId, attributeName, attributeType, isPublic, null);
    }
    
    /// <remarks/>
    public void CreateFrameAttributeDefinitionAsync(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic, object userState) {
        if ((this.CreateFrameAttributeDefinitionOperationCompleted == null)) {
            this.CreateFrameAttributeDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFrameAttributeDefinitionOperationCompleted);
        }
        this.InvokeAsync("CreateFrameAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic}, this.CreateFrameAttributeDefinitionOperationCompleted, userState);
    }
    
    private void OnCreateFrameAttributeDefinitionOperationCompleted(object arg) {
        if ((this.CreateFrameAttributeDefinitionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateFrameAttributeDefinitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("realmId")]
    public string CreateRealm(string apiKey, string email) {
        object[] results = this.Invoke("CreateRealm", new object[] {
                    apiKey,
                    email});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateRealm(string apiKey, string email, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateRealm", new object[] {
                    apiKey,
                    email}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCreateRealm(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CreateRealmAsync(string apiKey, string email) {
        this.CreateRealmAsync(apiKey, email, null);
    }
    
    /// <remarks/>
    public void CreateRealmAsync(string apiKey, string email, object userState) {
        if ((this.CreateRealmOperationCompleted == null)) {
            this.CreateRealmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRealmOperationCompleted);
        }
        this.InvokeAsync("CreateRealm", new object[] {
                    apiKey,
                    email}, this.CreateRealmOperationCompleted, userState);
    }
    
    private void OnCreateRealmOperationCompleted(object arg) {
        if ((this.CreateRealmCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateRealmCompleted(this, new CreateRealmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void CreateRealmAttributeDefinition(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic) {
        this.Invoke("CreateRealmAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateRealmAttributeDefinition(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateRealmAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndCreateRealmAttributeDefinition(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void CreateRealmAttributeDefinitionAsync(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic) {
        this.CreateRealmAttributeDefinitionAsync(apiKey, realmId, attributeName, attributeType, isPublic, null);
    }
    
    /// <remarks/>
    public void CreateRealmAttributeDefinitionAsync(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic, object userState) {
        if ((this.CreateRealmAttributeDefinitionOperationCompleted == null)) {
            this.CreateRealmAttributeDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRealmAttributeDefinitionOperationCompleted);
        }
        this.InvokeAsync("CreateRealmAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic}, this.CreateRealmAttributeDefinitionOperationCompleted, userState);
    }
    
    private void OnCreateRealmAttributeDefinitionOperationCompleted(object arg) {
        if ((this.CreateRealmAttributeDefinitionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateRealmAttributeDefinitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("id")]
    public string CreateRealmCellblock(string apiKey, string title, string realmId, string email) {
        object[] results = this.Invoke("CreateRealmCellblock", new object[] {
                    apiKey,
                    title,
                    realmId,
                    email});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateRealmCellblock(string apiKey, string title, string realmId, string email, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateRealmCellblock", new object[] {
                    apiKey,
                    title,
                    realmId,
                    email}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCreateRealmCellblock(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CreateRealmCellblockAsync(string apiKey, string title, string realmId, string email) {
        this.CreateRealmCellblockAsync(apiKey, title, realmId, email, null);
    }
    
    /// <remarks/>
    public void CreateRealmCellblockAsync(string apiKey, string title, string realmId, string email, object userState) {
        if ((this.CreateRealmCellblockOperationCompleted == null)) {
            this.CreateRealmCellblockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRealmCellblockOperationCompleted);
        }
        this.InvokeAsync("CreateRealmCellblock", new object[] {
                    apiKey,
                    title,
                    realmId,
                    email}, this.CreateRealmCellblockOperationCompleted, userState);
    }
    
    private void OnCreateRealmCellblockOperationCompleted(object arg) {
        if ((this.CreateRealmCellblockCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateRealmCellblockCompleted(this, new CreateRealmCellblockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void CreateUser(string apiKey, string realmId, string screenName, string email, string password, string mobileNumber, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string privilege, bool login, string attributes) {
        this.Invoke("CreateUser", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    email,
                    password,
                    mobileNumber,
                    privilege,
                    login,
                    attributes});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateUser(string apiKey, string realmId, string screenName, string email, string password, string mobileNumber, string privilege, bool login, string attributes, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateUser", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    email,
                    password,
                    mobileNumber,
                    privilege,
                    login,
                    attributes}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndCreateUser(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void CreateUserAsync(string apiKey, string realmId, string screenName, string email, string password, string mobileNumber, string privilege, bool login, string attributes) {
        this.CreateUserAsync(apiKey, realmId, screenName, email, password, mobileNumber, privilege, login, attributes, null);
    }
    
    /// <remarks/>
    public void CreateUserAsync(string apiKey, string realmId, string screenName, string email, string password, string mobileNumber, string privilege, bool login, string attributes, object userState) {
        if ((this.CreateUserOperationCompleted == null)) {
            this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
        }
        this.InvokeAsync("CreateUser", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    email,
                    password,
                    mobileNumber,
                    privilege,
                    login,
                    attributes}, this.CreateUserOperationCompleted, userState);
    }
    
    private void OnCreateUserOperationCompleted(object arg) {
        if ((this.CreateUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void CreateUserAttributeDefinition(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic) {
        this.Invoke("CreateUserAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateUserAttributeDefinition(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateUserAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndCreateUserAttributeDefinition(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void CreateUserAttributeDefinitionAsync(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic) {
        this.CreateUserAttributeDefinitionAsync(apiKey, realmId, attributeName, attributeType, isPublic, null);
    }
    
    /// <remarks/>
    public void CreateUserAttributeDefinitionAsync(string apiKey, string realmId, string attributeName, string attributeType, bool isPublic, object userState) {
        if ((this.CreateUserAttributeDefinitionOperationCompleted == null)) {
            this.CreateUserAttributeDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserAttributeDefinitionOperationCompleted);
        }
        this.InvokeAsync("CreateUserAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeType,
                    isPublic}, this.CreateUserAttributeDefinitionOperationCompleted, userState);
    }
    
    private void OnCreateUserAttributeDefinitionOperationCompleted(object arg) {
        if ((this.CreateUserAttributeDefinitionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateUserAttributeDefinitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void DeleteAd(string apiKey, string id) {
        this.Invoke("DeleteAd", new object[] {
                    apiKey,
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteAd(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteAd", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteAd(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAdAsync(string apiKey, string id) {
        this.DeleteAdAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void DeleteAdAsync(string apiKey, string id, object userState) {
        if ((this.DeleteAdOperationCompleted == null)) {
            this.DeleteAdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAdOperationCompleted);
        }
        this.InvokeAsync("DeleteAd", new object[] {
                    apiKey,
                    id}, this.DeleteAdOperationCompleted, userState);
    }
    
    private void OnDeleteAdOperationCompleted(object arg) {
        if ((this.DeleteAdCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteAdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void DeleteAdCampaign(string apiKey, string id) {
        this.Invoke("DeleteAdCampaign", new object[] {
                    apiKey,
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteAdCampaign(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteAdCampaign", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteAdCampaign(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAdCampaignAsync(string apiKey, string id) {
        this.DeleteAdCampaignAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void DeleteAdCampaignAsync(string apiKey, string id, object userState) {
        if ((this.DeleteAdCampaignOperationCompleted == null)) {
            this.DeleteAdCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAdCampaignOperationCompleted);
        }
        this.InvokeAsync("DeleteAdCampaign", new object[] {
                    apiKey,
                    id}, this.DeleteAdCampaignOperationCompleted, userState);
    }
    
    private void OnDeleteAdCampaignOperationCompleted(object arg) {
        if ((this.DeleteAdCampaignCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteAdCampaignCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void DeleteAttributeDefinition(string apiKey, string realmId, string attribute, string target) {
        this.Invoke("DeleteAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attribute,
                    target});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteAttributeDefinition(string apiKey, string realmId, string attribute, string target, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attribute,
                    target}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteAttributeDefinition(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteAttributeDefinitionAsync(string apiKey, string realmId, string attribute, string target) {
        this.DeleteAttributeDefinitionAsync(apiKey, realmId, attribute, target, null);
    }
    
    /// <remarks/>
    public void DeleteAttributeDefinitionAsync(string apiKey, string realmId, string attribute, string target, object userState) {
        if ((this.DeleteAttributeDefinitionOperationCompleted == null)) {
            this.DeleteAttributeDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttributeDefinitionOperationCompleted);
        }
        this.InvokeAsync("DeleteAttributeDefinition", new object[] {
                    apiKey,
                    realmId,
                    attribute,
                    target}, this.DeleteAttributeDefinitionOperationCompleted, userState);
    }
    
    private void OnDeleteAttributeDefinitionOperationCompleted(object arg) {
        if ((this.DeleteAttributeDefinitionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteAttributeDefinitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void DeleteCellblock(string apiKey, string id) {
        this.Invoke("DeleteCellblock", new object[] {
                    apiKey,
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteCellblock(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteCellblock", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteCellblock(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteCellblockAsync(string apiKey, string id) {
        this.DeleteCellblockAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void DeleteCellblockAsync(string apiKey, string id, object userState) {
        if ((this.DeleteCellblockOperationCompleted == null)) {
            this.DeleteCellblockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCellblockOperationCompleted);
        }
        this.InvokeAsync("DeleteCellblock", new object[] {
                    apiKey,
                    id}, this.DeleteCellblockOperationCompleted, userState);
    }
    
    private void OnDeleteCellblockOperationCompleted(object arg) {
        if ((this.DeleteCellblockCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteCellblockCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void DeleteComment(string apiKey, string id, string realmName, string userName, string frameId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string index) {
        this.Invoke("DeleteComment", new object[] {
                    apiKey,
                    id,
                    realmName,
                    userName,
                    frameId,
                    index});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteComment(string apiKey, string id, string realmName, string userName, string frameId, string index, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteComment", new object[] {
                    apiKey,
                    id,
                    realmName,
                    userName,
                    frameId,
                    index}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteComment(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteCommentAsync(string apiKey, string id, string realmName, string userName, string frameId, string index) {
        this.DeleteCommentAsync(apiKey, id, realmName, userName, frameId, index, null);
    }
    
    /// <remarks/>
    public void DeleteCommentAsync(string apiKey, string id, string realmName, string userName, string frameId, string index, object userState) {
        if ((this.DeleteCommentOperationCompleted == null)) {
            this.DeleteCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCommentOperationCompleted);
        }
        this.InvokeAsync("DeleteComment", new object[] {
                    apiKey,
                    id,
                    realmName,
                    userName,
                    frameId,
                    index}, this.DeleteCommentOperationCompleted, userState);
    }
    
    private void OnDeleteCommentOperationCompleted(object arg) {
        if ((this.DeleteCommentCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void DeleteDisplayModel(string apiKey, string id) {
        this.Invoke("DeleteDisplayModel", new object[] {
                    apiKey,
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteDisplayModel(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteDisplayModel", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteDisplayModel(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteDisplayModelAsync(string apiKey, string id) {
        this.DeleteDisplayModelAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void DeleteDisplayModelAsync(string apiKey, string id, object userState) {
        if ((this.DeleteDisplayModelOperationCompleted == null)) {
            this.DeleteDisplayModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDisplayModelOperationCompleted);
        }
        this.InvokeAsync("DeleteDisplayModel", new object[] {
                    apiKey,
                    id}, this.DeleteDisplayModelOperationCompleted, userState);
    }
    
    private void OnDeleteDisplayModelOperationCompleted(object arg) {
        if ((this.DeleteDisplayModelCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteDisplayModelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void DeleteFrame(string apiKey, string id) {
        this.Invoke("DeleteFrame", new object[] {
                    apiKey,
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteFrame(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteFrame", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteFrame(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteFrameAsync(string apiKey, string id) {
        this.DeleteFrameAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void DeleteFrameAsync(string apiKey, string id, object userState) {
        if ((this.DeleteFrameOperationCompleted == null)) {
            this.DeleteFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFrameOperationCompleted);
        }
        this.InvokeAsync("DeleteFrame", new object[] {
                    apiKey,
                    id}, this.DeleteFrameOperationCompleted, userState);
    }
    
    private void OnDeleteFrameOperationCompleted(object arg) {
        if ((this.DeleteFrameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteFrameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void DeleteUser(string apiKey, string realmId, string screenName) {
        this.Invoke("DeleteUser", new object[] {
                    apiKey,
                    realmId,
                    screenName});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteUser(string apiKey, string realmId, string screenName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteUser", new object[] {
                    apiKey,
                    realmId,
                    screenName}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndDeleteUser(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void DeleteUserAsync(string apiKey, string realmId, string screenName) {
        this.DeleteUserAsync(apiKey, realmId, screenName, null);
    }
    
    /// <remarks/>
    public void DeleteUserAsync(string apiKey, string realmId, string screenName, object userState) {
        if ((this.DeleteUserOperationCompleted == null)) {
            this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
        }
        this.InvokeAsync("DeleteUser", new object[] {
                    apiKey,
                    realmId,
                    screenName}, this.DeleteUserOperationCompleted, userState);
    }
    
    private void OnDeleteUserOperationCompleted(object arg) {
        if ((this.DeleteUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("dispositions")]
    public ArrayOfAnything EmailDisposition(string apiKey, string emails) {
        object[] results = this.Invoke("EmailDisposition", new object[] {
                    apiKey,
                    emails});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginEmailDisposition(string apiKey, string emails, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("EmailDisposition", new object[] {
                    apiKey,
                    emails}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndEmailDisposition(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void EmailDispositionAsync(string apiKey, string emails) {
        this.EmailDispositionAsync(apiKey, emails, null);
    }
    
    /// <remarks/>
    public void EmailDispositionAsync(string apiKey, string emails, object userState) {
        if ((this.EmailDispositionOperationCompleted == null)) {
            this.EmailDispositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmailDispositionOperationCompleted);
        }
        this.InvokeAsync("EmailDisposition", new object[] {
                    apiKey,
                    emails}, this.EmailDispositionOperationCompleted, userState);
    }
    
    private void OnEmailDispositionOperationCompleted(object arg) {
        if ((this.EmailDispositionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EmailDispositionCompleted(this, new EmailDispositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object FrameInfoForCellblock(string apiKey, string id, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count, string sortBy, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string direction, string extended) {
        object[] results = this.Invoke("FrameInfoForCellblock", new object[] {
                    apiKey,
                    id,
                    offset,
                    count,
                    sortBy,
                    direction,
                    extended});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFrameInfoForCellblock(string apiKey, string id, string offset, string count, string sortBy, string direction, string extended, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FrameInfoForCellblock", new object[] {
                    apiKey,
                    id,
                    offset,
                    count,
                    sortBy,
                    direction,
                    extended}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndFrameInfoForCellblock(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void FrameInfoForCellblockAsync(string apiKey, string id, string offset, string count, string sortBy, string direction, string extended) {
        this.FrameInfoForCellblockAsync(apiKey, id, offset, count, sortBy, direction, extended, null);
    }
    
    /// <remarks/>
    public void FrameInfoForCellblockAsync(string apiKey, string id, string offset, string count, string sortBy, string direction, string extended, object userState) {
        if ((this.FrameInfoForCellblockOperationCompleted == null)) {
            this.FrameInfoForCellblockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFrameInfoForCellblockOperationCompleted);
        }
        this.InvokeAsync("FrameInfoForCellblock", new object[] {
                    apiKey,
                    id,
                    offset,
                    count,
                    sortBy,
                    direction,
                    extended}, this.FrameInfoForCellblockOperationCompleted, userState);
    }
    
    private void OnFrameInfoForCellblockOperationCompleted(object arg) {
        if ((this.FrameInfoForCellblockCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FrameInfoForCellblockCompleted(this, new FrameInfoForCellblockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("campaigns")]
    public ArrayOfAnything GetAdCampaigns(string apiKey, string realmId) {
        object[] results = this.Invoke("GetAdCampaigns", new object[] {
                    apiKey,
                    realmId});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAdCampaigns(string apiKey, string realmId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAdCampaigns", new object[] {
                    apiKey,
                    realmId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetAdCampaigns(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetAdCampaignsAsync(string apiKey, string realmId) {
        this.GetAdCampaignsAsync(apiKey, realmId, null);
    }
    
    /// <remarks/>
    public void GetAdCampaignsAsync(string apiKey, string realmId, object userState) {
        if ((this.GetAdCampaignsOperationCompleted == null)) {
            this.GetAdCampaignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdCampaignsOperationCompleted);
        }
        this.InvokeAsync("GetAdCampaigns", new object[] {
                    apiKey,
                    realmId}, this.GetAdCampaignsOperationCompleted, userState);
    }
    
    private void OnGetAdCampaignsOperationCompleted(object arg) {
        if ((this.GetAdCampaignsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAdCampaignsCompleted(this, new GetAdCampaignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetAnnotation(string apiKey, string frameId) {
        object[] results = this.Invoke("GetAnnotation", new object[] {
                    apiKey,
                    frameId});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAnnotation(string apiKey, string frameId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAnnotation", new object[] {
                    apiKey,
                    frameId}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetAnnotation(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetAnnotationAsync(string apiKey, string frameId) {
        this.GetAnnotationAsync(apiKey, frameId, null);
    }
    
    /// <remarks/>
    public void GetAnnotationAsync(string apiKey, string frameId, object userState) {
        if ((this.GetAnnotationOperationCompleted == null)) {
            this.GetAnnotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnotationOperationCompleted);
        }
        this.InvokeAsync("GetAnnotation", new object[] {
                    apiKey,
                    frameId}, this.GetAnnotationOperationCompleted, userState);
    }
    
    private void OnGetAnnotationOperationCompleted(object arg) {
        if ((this.GetAnnotationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAnnotationCompleted(this, new GetAnnotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("attributes")]
    public ArrayOfAnything GetAttributeDefinitions(string apiKey, string realmId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count) {
        object[] results = this.Invoke("GetAttributeDefinitions", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAttributeDefinitions(string apiKey, string realmId, string offset, string count, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAttributeDefinitions", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetAttributeDefinitions(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetAttributeDefinitionsAsync(string apiKey, string realmId, string offset, string count) {
        this.GetAttributeDefinitionsAsync(apiKey, realmId, offset, count, null);
    }
    
    /// <remarks/>
    public void GetAttributeDefinitionsAsync(string apiKey, string realmId, string offset, string count, object userState) {
        if ((this.GetAttributeDefinitionsOperationCompleted == null)) {
            this.GetAttributeDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttributeDefinitionsOperationCompleted);
        }
        this.InvokeAsync("GetAttributeDefinitions", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count}, this.GetAttributeDefinitionsOperationCompleted, userState);
    }
    
    private void OnGetAttributeDefinitionsOperationCompleted(object arg) {
        if ((this.GetAttributeDefinitionsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAttributeDefinitionsCompleted(this, new GetAttributeDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("value")]
    public string GetCellblockAttributeValue(string apiKey, string id, string attributeName) {
        object[] results = this.Invoke("GetCellblockAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCellblockAttributeValue(string apiKey, string id, string attributeName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCellblockAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetCellblockAttributeValue(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetCellblockAttributeValueAsync(string apiKey, string id, string attributeName) {
        this.GetCellblockAttributeValueAsync(apiKey, id, attributeName, null);
    }
    
    /// <remarks/>
    public void GetCellblockAttributeValueAsync(string apiKey, string id, string attributeName, object userState) {
        if ((this.GetCellblockAttributeValueOperationCompleted == null)) {
            this.GetCellblockAttributeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCellblockAttributeValueOperationCompleted);
        }
        this.InvokeAsync("GetCellblockAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName}, this.GetCellblockAttributeValueOperationCompleted, userState);
    }
    
    private void OnGetCellblockAttributeValueOperationCompleted(object arg) {
        if ((this.GetCellblockAttributeValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCellblockAttributeValueCompleted(this, new GetCellblockAttributeValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("attributes")]
    public ArrayOfAnything GetCellblockAttributeValues(string apiKey, string realmId, string id) {
        object[] results = this.Invoke("GetCellblockAttributeValues", new object[] {
                    apiKey,
                    realmId,
                    id});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCellblockAttributeValues(string apiKey, string realmId, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCellblockAttributeValues", new object[] {
                    apiKey,
                    realmId,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetCellblockAttributeValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetCellblockAttributeValuesAsync(string apiKey, string realmId, string id) {
        this.GetCellblockAttributeValuesAsync(apiKey, realmId, id, null);
    }
    
    /// <remarks/>
    public void GetCellblockAttributeValuesAsync(string apiKey, string realmId, string id, object userState) {
        if ((this.GetCellblockAttributeValuesOperationCompleted == null)) {
            this.GetCellblockAttributeValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCellblockAttributeValuesOperationCompleted);
        }
        this.InvokeAsync("GetCellblockAttributeValues", new object[] {
                    apiKey,
                    realmId,
                    id}, this.GetCellblockAttributeValuesOperationCompleted, userState);
    }
    
    private void OnGetCellblockAttributeValuesOperationCompleted(object arg) {
        if ((this.GetCellblockAttributeValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCellblockAttributeValuesCompleted(this, new GetCellblockAttributeValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetCellblockInfo(string apiKey, string id, string displayModel, bool extended) {
        object[] results = this.Invoke("GetCellblockInfo", new object[] {
                    apiKey,
                    id,
                    displayModel,
                    extended});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCellblockInfo(string apiKey, string id, string displayModel, bool extended, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCellblockInfo", new object[] {
                    apiKey,
                    id,
                    displayModel,
                    extended}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetCellblockInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetCellblockInfoAsync(string apiKey, string id, string displayModel, bool extended) {
        this.GetCellblockInfoAsync(apiKey, id, displayModel, extended, null);
    }
    
    /// <remarks/>
    public void GetCellblockInfoAsync(string apiKey, string id, string displayModel, bool extended, object userState) {
        if ((this.GetCellblockInfoOperationCompleted == null)) {
            this.GetCellblockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCellblockInfoOperationCompleted);
        }
        this.InvokeAsync("GetCellblockInfo", new object[] {
                    apiKey,
                    id,
                    displayModel,
                    extended}, this.GetCellblockInfoOperationCompleted, userState);
    }
    
    private void OnGetCellblockInfoOperationCompleted(object arg) {
        if ((this.GetCellblockInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCellblockInfoCompleted(this, new GetCellblockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetComments(string apiKey, string id, string realmName, string userName, string frameId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count, string filter, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string direction) {
        object[] results = this.Invoke("GetComments", new object[] {
                    apiKey,
                    id,
                    realmName,
                    userName,
                    frameId,
                    offset,
                    count,
                    filter,
                    direction});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetComments(string apiKey, string id, string realmName, string userName, string frameId, string offset, string count, string filter, string direction, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetComments", new object[] {
                    apiKey,
                    id,
                    realmName,
                    userName,
                    frameId,
                    offset,
                    count,
                    filter,
                    direction}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetComments(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetCommentsAsync(string apiKey, string id, string realmName, string userName, string frameId, string offset, string count, string filter, string direction) {
        this.GetCommentsAsync(apiKey, id, realmName, userName, frameId, offset, count, filter, direction, null);
    }
    
    /// <remarks/>
    public void GetCommentsAsync(string apiKey, string id, string realmName, string userName, string frameId, string offset, string count, string filter, string direction, object userState) {
        if ((this.GetCommentsOperationCompleted == null)) {
            this.GetCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsOperationCompleted);
        }
        this.InvokeAsync("GetComments", new object[] {
                    apiKey,
                    id,
                    realmName,
                    userName,
                    frameId,
                    offset,
                    count,
                    filter,
                    direction}, this.GetCommentsOperationCompleted, userState);
    }
    
    private void OnGetCommentsOperationCompleted(object arg) {
        if ((this.GetCommentsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCommentsCompleted(this, new GetCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetDisplayModel(string apiKey, string id) {
        object[] results = this.Invoke("GetDisplayModel", new object[] {
                    apiKey,
                    id});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDisplayModel(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDisplayModel", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetDisplayModel(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetDisplayModelAsync(string apiKey, string id) {
        this.GetDisplayModelAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void GetDisplayModelAsync(string apiKey, string id, object userState) {
        if ((this.GetDisplayModelOperationCompleted == null)) {
            this.GetDisplayModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDisplayModelOperationCompleted);
        }
        this.InvokeAsync("GetDisplayModel", new object[] {
                    apiKey,
                    id}, this.GetDisplayModelOperationCompleted, userState);
    }
    
    private void OnGetDisplayModelOperationCompleted(object arg) {
        if ((this.GetDisplayModelCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDisplayModelCompleted(this, new GetDisplayModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetDisplayModels(string apiKey, string realmId, string screenName, bool mobile, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count) {
        object[] results = this.Invoke("GetDisplayModels", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    mobile,
                    offset,
                    count});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDisplayModels(string apiKey, string realmId, string screenName, bool mobile, string offset, string count, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDisplayModels", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    mobile,
                    offset,
                    count}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetDisplayModels(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetDisplayModelsAsync(string apiKey, string realmId, string screenName, bool mobile, string offset, string count) {
        this.GetDisplayModelsAsync(apiKey, realmId, screenName, mobile, offset, count, null);
    }
    
    /// <remarks/>
    public void GetDisplayModelsAsync(string apiKey, string realmId, string screenName, bool mobile, string offset, string count, object userState) {
        if ((this.GetDisplayModelsOperationCompleted == null)) {
            this.GetDisplayModelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDisplayModelsOperationCompleted);
        }
        this.InvokeAsync("GetDisplayModels", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    mobile,
                    offset,
                    count}, this.GetDisplayModelsOperationCompleted, userState);
    }
    
    private void OnGetDisplayModelsOperationCompleted(object arg) {
        if ((this.GetDisplayModelsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDisplayModelsCompleted(this, new GetDisplayModelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetDocumentation(string apiKey, string methodOfInterest, string tagName, string engineName, string tagStyle) {
        object[] results = this.Invoke("GetDocumentation", new object[] {
                    apiKey,
                    methodOfInterest,
                    tagName,
                    engineName,
                    tagStyle});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDocumentation(string apiKey, string methodOfInterest, string tagName, string engineName, string tagStyle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDocumentation", new object[] {
                    apiKey,
                    methodOfInterest,
                    tagName,
                    engineName,
                    tagStyle}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetDocumentation(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetDocumentationAsync(string apiKey, string methodOfInterest, string tagName, string engineName, string tagStyle) {
        this.GetDocumentationAsync(apiKey, methodOfInterest, tagName, engineName, tagStyle, null);
    }
    
    /// <remarks/>
    public void GetDocumentationAsync(string apiKey, string methodOfInterest, string tagName, string engineName, string tagStyle, object userState) {
        if ((this.GetDocumentationOperationCompleted == null)) {
            this.GetDocumentationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentationOperationCompleted);
        }
        this.InvokeAsync("GetDocumentation", new object[] {
                    apiKey,
                    methodOfInterest,
                    tagName,
                    engineName,
                    tagStyle}, this.GetDocumentationOperationCompleted, userState);
    }
    
    private void OnGetDocumentationOperationCompleted(object arg) {
        if ((this.GetDocumentationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDocumentationCompleted(this, new GetDocumentationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetEventInfo(string apiKey, string realmId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string startTimestamp, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string endTimestamp) {
        object[] results = this.Invoke("GetEventInfo", new object[] {
                    apiKey,
                    realmId,
                    startTimestamp,
                    endTimestamp});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetEventInfo(string apiKey, string realmId, string startTimestamp, string endTimestamp, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetEventInfo", new object[] {
                    apiKey,
                    realmId,
                    startTimestamp,
                    endTimestamp}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetEventInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetEventInfoAsync(string apiKey, string realmId, string startTimestamp, string endTimestamp) {
        this.GetEventInfoAsync(apiKey, realmId, startTimestamp, endTimestamp, null);
    }
    
    /// <remarks/>
    public void GetEventInfoAsync(string apiKey, string realmId, string startTimestamp, string endTimestamp, object userState) {
        if ((this.GetEventInfoOperationCompleted == null)) {
            this.GetEventInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventInfoOperationCompleted);
        }
        this.InvokeAsync("GetEventInfo", new object[] {
                    apiKey,
                    realmId,
                    startTimestamp,
                    endTimestamp}, this.GetEventInfoOperationCompleted, userState);
    }
    
    private void OnGetEventInfoOperationCompleted(object arg) {
        if ((this.GetEventInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetEventInfoCompleted(this, new GetEventInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("value")]
    public string GetFrameAttributeValue(string apiKey, string id, string attributeName) {
        object[] results = this.Invoke("GetFrameAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetFrameAttributeValue(string apiKey, string id, string attributeName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetFrameAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetFrameAttributeValue(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetFrameAttributeValueAsync(string apiKey, string id, string attributeName) {
        this.GetFrameAttributeValueAsync(apiKey, id, attributeName, null);
    }
    
    /// <remarks/>
    public void GetFrameAttributeValueAsync(string apiKey, string id, string attributeName, object userState) {
        if ((this.GetFrameAttributeValueOperationCompleted == null)) {
            this.GetFrameAttributeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFrameAttributeValueOperationCompleted);
        }
        this.InvokeAsync("GetFrameAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName}, this.GetFrameAttributeValueOperationCompleted, userState);
    }
    
    private void OnGetFrameAttributeValueOperationCompleted(object arg) {
        if ((this.GetFrameAttributeValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetFrameAttributeValueCompleted(this, new GetFrameAttributeValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("attributes")]
    public ArrayOfAnything GetFrameAttributeValues(string apiKey, string id) {
        object[] results = this.Invoke("GetFrameAttributeValues", new object[] {
                    apiKey,
                    id});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetFrameAttributeValues(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetFrameAttributeValues", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetFrameAttributeValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetFrameAttributeValuesAsync(string apiKey, string id) {
        this.GetFrameAttributeValuesAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void GetFrameAttributeValuesAsync(string apiKey, string id, object userState) {
        if ((this.GetFrameAttributeValuesOperationCompleted == null)) {
            this.GetFrameAttributeValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFrameAttributeValuesOperationCompleted);
        }
        this.InvokeAsync("GetFrameAttributeValues", new object[] {
                    apiKey,
                    id}, this.GetFrameAttributeValuesOperationCompleted, userState);
    }
    
    private void OnGetFrameAttributeValuesOperationCompleted(object arg) {
        if ((this.GetFrameAttributeValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetFrameAttributeValuesCompleted(this, new GetFrameAttributeValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetFrameInfo(string apiKey, string frameId, string format) {
        object[] results = this.Invoke("GetFrameInfo", new object[] {
                    apiKey,
                    frameId,
                    format});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetFrameInfo(string apiKey, string frameId, string format, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetFrameInfo", new object[] {
                    apiKey,
                    frameId,
                    format}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetFrameInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetFrameInfoAsync(string apiKey, string frameId, string format) {
        this.GetFrameInfoAsync(apiKey, frameId, format, null);
    }
    
    /// <remarks/>
    public void GetFrameInfoAsync(string apiKey, string frameId, string format, object userState) {
        if ((this.GetFrameInfoOperationCompleted == null)) {
            this.GetFrameInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFrameInfoOperationCompleted);
        }
        this.InvokeAsync("GetFrameInfo", new object[] {
                    apiKey,
                    frameId,
                    format}, this.GetFrameInfoOperationCompleted, userState);
    }
    
    private void OnGetFrameInfoOperationCompleted(object arg) {
        if ((this.GetFrameInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetFrameInfoCompleted(this, new GetFrameInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("frames")]
    public ArrayOfAnything GetFramesNewerThan(string apiKey, string id, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string wIndex) {
        object[] results = this.Invoke("GetFramesNewerThan", new object[] {
                    apiKey,
                    id,
                    wIndex});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetFramesNewerThan(string apiKey, string id, string wIndex, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetFramesNewerThan", new object[] {
                    apiKey,
                    id,
                    wIndex}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetFramesNewerThan(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetFramesNewerThanAsync(string apiKey, string id, string wIndex) {
        this.GetFramesNewerThanAsync(apiKey, id, wIndex, null);
    }
    
    /// <remarks/>
    public void GetFramesNewerThanAsync(string apiKey, string id, string wIndex, object userState) {
        if ((this.GetFramesNewerThanOperationCompleted == null)) {
            this.GetFramesNewerThanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFramesNewerThanOperationCompleted);
        }
        this.InvokeAsync("GetFramesNewerThan", new object[] {
                    apiKey,
                    id,
                    wIndex}, this.GetFramesNewerThanOperationCompleted, userState);
    }
    
    private void OnGetFramesNewerThanOperationCompleted(object arg) {
        if ((this.GetFramesNewerThanCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetFramesNewerThanCompleted(this, new GetFramesNewerThanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetImageFilterInfo(string apiKey, string realmId) {
        object[] results = this.Invoke("GetImageFilterInfo", new object[] {
                    apiKey,
                    realmId});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetImageFilterInfo(string apiKey, string realmId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetImageFilterInfo", new object[] {
                    apiKey,
                    realmId}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetImageFilterInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetImageFilterInfoAsync(string apiKey, string realmId) {
        this.GetImageFilterInfoAsync(apiKey, realmId, null);
    }
    
    /// <remarks/>
    public void GetImageFilterInfoAsync(string apiKey, string realmId, object userState) {
        if ((this.GetImageFilterInfoOperationCompleted == null)) {
            this.GetImageFilterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageFilterInfoOperationCompleted);
        }
        this.InvokeAsync("GetImageFilterInfo", new object[] {
                    apiKey,
                    realmId}, this.GetImageFilterInfoOperationCompleted, userState);
    }
    
    private void OnGetImageFilterInfoOperationCompleted(object arg) {
        if ((this.GetImageFilterInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetImageFilterInfoCompleted(this, new GetImageFilterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetLanguageFilterInfo(string apiKey, string realmId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count) {
        object[] results = this.Invoke("GetLanguageFilterInfo", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetLanguageFilterInfo(string apiKey, string realmId, string offset, string count, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetLanguageFilterInfo", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetLanguageFilterInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetLanguageFilterInfoAsync(string apiKey, string realmId, string offset, string count) {
        this.GetLanguageFilterInfoAsync(apiKey, realmId, offset, count, null);
    }
    
    /// <remarks/>
    public void GetLanguageFilterInfoAsync(string apiKey, string realmId, string offset, string count, object userState) {
        if ((this.GetLanguageFilterInfoOperationCompleted == null)) {
            this.GetLanguageFilterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLanguageFilterInfoOperationCompleted);
        }
        this.InvokeAsync("GetLanguageFilterInfo", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count}, this.GetLanguageFilterInfoOperationCompleted, userState);
    }
    
    private void OnGetLanguageFilterInfoOperationCompleted(object arg) {
        if ((this.GetLanguageFilterInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetLanguageFilterInfoCompleted(this, new GetLanguageFilterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("cellblocks")]
    public ArrayOfAnything GetMatchingCellblocks(string apiKey, string realmId, string aqlQuery, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count) {
        object[] results = this.Invoke("GetMatchingCellblocks", new object[] {
                    apiKey,
                    realmId,
                    aqlQuery,
                    offset,
                    count});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetMatchingCellblocks(string apiKey, string realmId, string aqlQuery, string offset, string count, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetMatchingCellblocks", new object[] {
                    apiKey,
                    realmId,
                    aqlQuery,
                    offset,
                    count}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetMatchingCellblocks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetMatchingCellblocksAsync(string apiKey, string realmId, string aqlQuery, string offset, string count) {
        this.GetMatchingCellblocksAsync(apiKey, realmId, aqlQuery, offset, count, null);
    }
    
    /// <remarks/>
    public void GetMatchingCellblocksAsync(string apiKey, string realmId, string aqlQuery, string offset, string count, object userState) {
        if ((this.GetMatchingCellblocksOperationCompleted == null)) {
            this.GetMatchingCellblocksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchingCellblocksOperationCompleted);
        }
        this.InvokeAsync("GetMatchingCellblocks", new object[] {
                    apiKey,
                    realmId,
                    aqlQuery,
                    offset,
                    count}, this.GetMatchingCellblocksOperationCompleted, userState);
    }
    
    private void OnGetMatchingCellblocksOperationCompleted(object arg) {
        if ((this.GetMatchingCellblocksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMatchingCellblocksCompleted(this, new GetMatchingCellblocksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("frames")]
    public ArrayOfString GetMatchingFrames(string apiKey, string realmId, string aqlQuery, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count, string context) {
        object[] results = this.Invoke("GetMatchingFrames", new object[] {
                    apiKey,
                    realmId,
                    aqlQuery,
                    offset,
                    count,
                    context});
        return ((ArrayOfString)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetMatchingFrames(string apiKey, string realmId, string aqlQuery, string offset, string count, string context, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetMatchingFrames", new object[] {
                    apiKey,
                    realmId,
                    aqlQuery,
                    offset,
                    count,
                    context}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfString EndGetMatchingFrames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfString)(results[0]));
    }
    
    /// <remarks/>
    public void GetMatchingFramesAsync(string apiKey, string realmId, string aqlQuery, string offset, string count, string context) {
        this.GetMatchingFramesAsync(apiKey, realmId, aqlQuery, offset, count, context, null);
    }
    
    /// <remarks/>
    public void GetMatchingFramesAsync(string apiKey, string realmId, string aqlQuery, string offset, string count, string context, object userState) {
        if ((this.GetMatchingFramesOperationCompleted == null)) {
            this.GetMatchingFramesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchingFramesOperationCompleted);
        }
        this.InvokeAsync("GetMatchingFrames", new object[] {
                    apiKey,
                    realmId,
                    aqlQuery,
                    offset,
                    count,
                    context}, this.GetMatchingFramesOperationCompleted, userState);
    }
    
    private void OnGetMatchingFramesOperationCompleted(object arg) {
        if ((this.GetMatchingFramesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMatchingFramesCompleted(this, new GetMatchingFramesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("users")]
    public ArrayOfAnything GetMatchingUsers(string apiKey, string realmId, string aqlQuery, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count) {
        object[] results = this.Invoke("GetMatchingUsers", new object[] {
                    apiKey,
                    realmId,
                    aqlQuery,
                    offset,
                    count});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetMatchingUsers(string apiKey, string realmId, string aqlQuery, string offset, string count, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetMatchingUsers", new object[] {
                    apiKey,
                    realmId,
                    aqlQuery,
                    offset,
                    count}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetMatchingUsers(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetMatchingUsersAsync(string apiKey, string realmId, string aqlQuery, string offset, string count) {
        this.GetMatchingUsersAsync(apiKey, realmId, aqlQuery, offset, count, null);
    }
    
    /// <remarks/>
    public void GetMatchingUsersAsync(string apiKey, string realmId, string aqlQuery, string offset, string count, object userState) {
        if ((this.GetMatchingUsersOperationCompleted == null)) {
            this.GetMatchingUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchingUsersOperationCompleted);
        }
        this.InvokeAsync("GetMatchingUsers", new object[] {
                    apiKey,
                    realmId,
                    aqlQuery,
                    offset,
                    count}, this.GetMatchingUsersOperationCompleted, userState);
    }
    
    private void OnGetMatchingUsersOperationCompleted(object arg) {
        if ((this.GetMatchingUsersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMatchingUsersCompleted(this, new GetMatchingUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetMediaFilterInfo(string apiKey, string cellblockId) {
        object[] results = this.Invoke("GetMediaFilterInfo", new object[] {
                    apiKey,
                    cellblockId});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetMediaFilterInfo(string apiKey, string cellblockId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetMediaFilterInfo", new object[] {
                    apiKey,
                    cellblockId}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetMediaFilterInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetMediaFilterInfoAsync(string apiKey, string cellblockId) {
        this.GetMediaFilterInfoAsync(apiKey, cellblockId, null);
    }
    
    /// <remarks/>
    public void GetMediaFilterInfoAsync(string apiKey, string cellblockId, object userState) {
        if ((this.GetMediaFilterInfoOperationCompleted == null)) {
            this.GetMediaFilterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMediaFilterInfoOperationCompleted);
        }
        this.InvokeAsync("GetMediaFilterInfo", new object[] {
                    apiKey,
                    cellblockId}, this.GetMediaFilterInfoOperationCompleted, userState);
    }
    
    private void OnGetMediaFilterInfoOperationCompleted(object arg) {
        if ((this.GetMediaFilterInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMediaFilterInfoCompleted(this, new GetMediaFilterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("methods")]
    public ArrayOfAnything GetPublicApiMethods(string apiKey, string category) {
        object[] results = this.Invoke("GetPublicApiMethods", new object[] {
                    apiKey,
                    category});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPublicApiMethods(string apiKey, string category, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPublicApiMethods", new object[] {
                    apiKey,
                    category}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetPublicApiMethods(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetPublicApiMethodsAsync(string apiKey, string category) {
        this.GetPublicApiMethodsAsync(apiKey, category, null);
    }
    
    /// <remarks/>
    public void GetPublicApiMethodsAsync(string apiKey, string category, object userState) {
        if ((this.GetPublicApiMethodsOperationCompleted == null)) {
            this.GetPublicApiMethodsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPublicApiMethodsOperationCompleted);
        }
        this.InvokeAsync("GetPublicApiMethods", new object[] {
                    apiKey,
                    category}, this.GetPublicApiMethodsOperationCompleted, userState);
    }
    
    private void OnGetPublicApiMethodsOperationCompleted(object arg) {
        if ((this.GetPublicApiMethodsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPublicApiMethodsCompleted(this, new GetPublicApiMethodsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetRating(string apiKey, string id, string realmName, string userName, string frameId) {
        object[] results = this.Invoke("GetRating", new object[] {
                    apiKey,
                    id,
                    realmName,
                    userName,
                    frameId});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetRating(string apiKey, string id, string realmName, string userName, string frameId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetRating", new object[] {
                    apiKey,
                    id,
                    realmName,
                    userName,
                    frameId}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetRating(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetRatingAsync(string apiKey, string id, string realmName, string userName, string frameId) {
        this.GetRatingAsync(apiKey, id, realmName, userName, frameId, null);
    }
    
    /// <remarks/>
    public void GetRatingAsync(string apiKey, string id, string realmName, string userName, string frameId, object userState) {
        if ((this.GetRatingOperationCompleted == null)) {
            this.GetRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRatingOperationCompleted);
        }
        this.InvokeAsync("GetRating", new object[] {
                    apiKey,
                    id,
                    realmName,
                    userName,
                    frameId}, this.GetRatingOperationCompleted, userState);
    }
    
    private void OnGetRatingOperationCompleted(object arg) {
        if ((this.GetRatingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetRatingCompleted(this, new GetRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("value")]
    public string GetRealmAttributeValue(string apiKey, string realmId, string attributeName) {
        object[] results = this.Invoke("GetRealmAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    attributeName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetRealmAttributeValue(string apiKey, string realmId, string attributeName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetRealmAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    attributeName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetRealmAttributeValue(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetRealmAttributeValueAsync(string apiKey, string realmId, string attributeName) {
        this.GetRealmAttributeValueAsync(apiKey, realmId, attributeName, null);
    }
    
    /// <remarks/>
    public void GetRealmAttributeValueAsync(string apiKey, string realmId, string attributeName, object userState) {
        if ((this.GetRealmAttributeValueOperationCompleted == null)) {
            this.GetRealmAttributeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealmAttributeValueOperationCompleted);
        }
        this.InvokeAsync("GetRealmAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    attributeName}, this.GetRealmAttributeValueOperationCompleted, userState);
    }
    
    private void OnGetRealmAttributeValueOperationCompleted(object arg) {
        if ((this.GetRealmAttributeValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetRealmAttributeValueCompleted(this, new GetRealmAttributeValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("attributes")]
    public ArrayOfAnything GetRealmAttributeValues(string apiKey, string realmId) {
        object[] results = this.Invoke("GetRealmAttributeValues", new object[] {
                    apiKey,
                    realmId});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetRealmAttributeValues(string apiKey, string realmId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetRealmAttributeValues", new object[] {
                    apiKey,
                    realmId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetRealmAttributeValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetRealmAttributeValuesAsync(string apiKey, string realmId) {
        this.GetRealmAttributeValuesAsync(apiKey, realmId, null);
    }
    
    /// <remarks/>
    public void GetRealmAttributeValuesAsync(string apiKey, string realmId, object userState) {
        if ((this.GetRealmAttributeValuesOperationCompleted == null)) {
            this.GetRealmAttributeValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealmAttributeValuesOperationCompleted);
        }
        this.InvokeAsync("GetRealmAttributeValues", new object[] {
                    apiKey,
                    realmId}, this.GetRealmAttributeValuesOperationCompleted, userState);
    }
    
    private void OnGetRealmAttributeValuesOperationCompleted(object arg) {
        if ((this.GetRealmAttributeValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetRealmAttributeValuesCompleted(this, new GetRealmAttributeValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("cellblocks")]
    public ArrayOfAnything GetRealmCellblocks(string apiKey, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count, string realmId, string extended) {
        object[] results = this.Invoke("GetRealmCellblocks", new object[] {
                    apiKey,
                    offset,
                    count,
                    realmId,
                    extended});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetRealmCellblocks(string apiKey, string offset, string count, string realmId, string extended, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetRealmCellblocks", new object[] {
                    apiKey,
                    offset,
                    count,
                    realmId,
                    extended}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetRealmCellblocks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetRealmCellblocksAsync(string apiKey, string offset, string count, string realmId, string extended) {
        this.GetRealmCellblocksAsync(apiKey, offset, count, realmId, extended, null);
    }
    
    /// <remarks/>
    public void GetRealmCellblocksAsync(string apiKey, string offset, string count, string realmId, string extended, object userState) {
        if ((this.GetRealmCellblocksOperationCompleted == null)) {
            this.GetRealmCellblocksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealmCellblocksOperationCompleted);
        }
        this.InvokeAsync("GetRealmCellblocks", new object[] {
                    apiKey,
                    offset,
                    count,
                    realmId,
                    extended}, this.GetRealmCellblocksOperationCompleted, userState);
    }
    
    private void OnGetRealmCellblocksOperationCompleted(object arg) {
        if ((this.GetRealmCellblocksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetRealmCellblocksCompleted(this, new GetRealmCellblocksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetRealmInfo(string apiKey, string realmId) {
        object[] results = this.Invoke("GetRealmInfo", new object[] {
                    apiKey,
                    realmId});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetRealmInfo(string apiKey, string realmId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetRealmInfo", new object[] {
                    apiKey,
                    realmId}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetRealmInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetRealmInfoAsync(string apiKey, string realmId) {
        this.GetRealmInfoAsync(apiKey, realmId, null);
    }
    
    /// <remarks/>
    public void GetRealmInfoAsync(string apiKey, string realmId, object userState) {
        if ((this.GetRealmInfoOperationCompleted == null)) {
            this.GetRealmInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealmInfoOperationCompleted);
        }
        this.InvokeAsync("GetRealmInfo", new object[] {
                    apiKey,
                    realmId}, this.GetRealmInfoOperationCompleted, userState);
    }
    
    private void OnGetRealmInfoOperationCompleted(object arg) {
        if ((this.GetRealmInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetRealmInfoCompleted(this, new GetRealmInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetSessionInfo(string apiKey) {
        object[] results = this.Invoke("GetSessionInfo", new object[] {
                    apiKey});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetSessionInfo(string apiKey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetSessionInfo", new object[] {
                    apiKey}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetSessionInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetSessionInfoAsync(string apiKey) {
        this.GetSessionInfoAsync(apiKey, null);
    }
    
    /// <remarks/>
    public void GetSessionInfoAsync(string apiKey, object userState) {
        if ((this.GetSessionInfoOperationCompleted == null)) {
            this.GetSessionInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionInfoOperationCompleted);
        }
        this.InvokeAsync("GetSessionInfo", new object[] {
                    apiKey}, this.GetSessionInfoOperationCompleted, userState);
    }
    
    private void OnGetSessionInfoOperationCompleted(object arg) {
        if ((this.GetSessionInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetSessionInfoCompleted(this, new GetSessionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("value")]
    public string GetUserAttributeValue(string apiKey, string realmId, string screenName, string attributeName) {
        object[] results = this.Invoke("GetUserAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    attributeName});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUserAttributeValue(string apiKey, string realmId, string screenName, string attributeName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUserAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    attributeName}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetUserAttributeValue(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetUserAttributeValueAsync(string apiKey, string realmId, string screenName, string attributeName) {
        this.GetUserAttributeValueAsync(apiKey, realmId, screenName, attributeName, null);
    }
    
    /// <remarks/>
    public void GetUserAttributeValueAsync(string apiKey, string realmId, string screenName, string attributeName, object userState) {
        if ((this.GetUserAttributeValueOperationCompleted == null)) {
            this.GetUserAttributeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAttributeValueOperationCompleted);
        }
        this.InvokeAsync("GetUserAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    attributeName}, this.GetUserAttributeValueOperationCompleted, userState);
    }
    
    private void OnGetUserAttributeValueOperationCompleted(object arg) {
        if ((this.GetUserAttributeValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserAttributeValueCompleted(this, new GetUserAttributeValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("attributes")]
    public ArrayOfAnything GetUserAttributeValues(string apiKey, string realmId, string screenName) {
        object[] results = this.Invoke("GetUserAttributeValues", new object[] {
                    apiKey,
                    realmId,
                    screenName});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUserAttributeValues(string apiKey, string realmId, string screenName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUserAttributeValues", new object[] {
                    apiKey,
                    realmId,
                    screenName}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndGetUserAttributeValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void GetUserAttributeValuesAsync(string apiKey, string realmId, string screenName) {
        this.GetUserAttributeValuesAsync(apiKey, realmId, screenName, null);
    }
    
    /// <remarks/>
    public void GetUserAttributeValuesAsync(string apiKey, string realmId, string screenName, object userState) {
        if ((this.GetUserAttributeValuesOperationCompleted == null)) {
            this.GetUserAttributeValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAttributeValuesOperationCompleted);
        }
        this.InvokeAsync("GetUserAttributeValues", new object[] {
                    apiKey,
                    realmId,
                    screenName}, this.GetUserAttributeValuesOperationCompleted, userState);
    }
    
    private void OnGetUserAttributeValuesOperationCompleted(object arg) {
        if ((this.GetUserAttributeValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserAttributeValuesCompleted(this, new GetUserAttributeValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetUserCellblocks(string apiKey, string screenName, string realmId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count, string extended) {
        object[] results = this.Invoke("GetUserCellblocks", new object[] {
                    apiKey,
                    screenName,
                    realmId,
                    offset,
                    count,
                    extended});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUserCellblocks(string apiKey, string screenName, string realmId, string offset, string count, string extended, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUserCellblocks", new object[] {
                    apiKey,
                    screenName,
                    realmId,
                    offset,
                    count,
                    extended}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetUserCellblocks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetUserCellblocksAsync(string apiKey, string screenName, string realmId, string offset, string count, string extended) {
        this.GetUserCellblocksAsync(apiKey, screenName, realmId, offset, count, extended, null);
    }
    
    /// <remarks/>
    public void GetUserCellblocksAsync(string apiKey, string screenName, string realmId, string offset, string count, string extended, object userState) {
        if ((this.GetUserCellblocksOperationCompleted == null)) {
            this.GetUserCellblocksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCellblocksOperationCompleted);
        }
        this.InvokeAsync("GetUserCellblocks", new object[] {
                    apiKey,
                    screenName,
                    realmId,
                    offset,
                    count,
                    extended}, this.GetUserCellblocksOperationCompleted, userState);
    }
    
    private void OnGetUserCellblocksOperationCompleted(object arg) {
        if ((this.GetUserCellblocksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserCellblocksCompleted(this, new GetUserCellblocksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetUserFrames(string apiKey, string screenName, string realmId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string order, string extended) {
        object[] results = this.Invoke("GetUserFrames", new object[] {
                    apiKey,
                    screenName,
                    realmId,
                    offset,
                    count,
                    order,
                    extended});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUserFrames(string apiKey, string screenName, string realmId, string offset, string count, string order, string extended, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUserFrames", new object[] {
                    apiKey,
                    screenName,
                    realmId,
                    offset,
                    count,
                    order,
                    extended}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetUserFrames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetUserFramesAsync(string apiKey, string screenName, string realmId, string offset, string count, string order, string extended) {
        this.GetUserFramesAsync(apiKey, screenName, realmId, offset, count, order, extended, null);
    }
    
    /// <remarks/>
    public void GetUserFramesAsync(string apiKey, string screenName, string realmId, string offset, string count, string order, string extended, object userState) {
        if ((this.GetUserFramesOperationCompleted == null)) {
            this.GetUserFramesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFramesOperationCompleted);
        }
        this.InvokeAsync("GetUserFrames", new object[] {
                    apiKey,
                    screenName,
                    realmId,
                    offset,
                    count,
                    order,
                    extended}, this.GetUserFramesOperationCompleted, userState);
    }
    
    private void OnGetUserFramesOperationCompleted(object arg) {
        if ((this.GetUserFramesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserFramesCompleted(this, new GetUserFramesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetUserInfo(string apiKey, string realmId, string screenName, string extended) {
        object[] results = this.Invoke("GetUserInfo", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    extended});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUserInfo(string apiKey, string realmId, string screenName, string extended, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUserInfo", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    extended}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetUserInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetUserInfoAsync(string apiKey, string realmId, string screenName, string extended) {
        this.GetUserInfoAsync(apiKey, realmId, screenName, extended, null);
    }
    
    /// <remarks/>
    public void GetUserInfoAsync(string apiKey, string realmId, string screenName, string extended, object userState) {
        if ((this.GetUserInfoOperationCompleted == null)) {
            this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
        }
        this.InvokeAsync("GetUserInfo", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    extended}, this.GetUserInfoOperationCompleted, userState);
    }
    
    private void OnGetUserInfoOperationCompleted(object arg) {
        if ((this.GetUserInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object GetUsersInRealm(string apiKey, string realmId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string minPrivilege, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string maxPrivilege, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string minDate, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string maxDate, string sortBy, bool extended) {
        object[] results = this.Invoke("GetUsersInRealm", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count,
                    minPrivilege,
                    maxPrivilege,
                    minDate,
                    maxDate,
                    sortBy,
                    extended});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetUsersInRealm(string apiKey, string realmId, string offset, string count, string minPrivilege, string maxPrivilege, string minDate, string maxDate, string sortBy, bool extended, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetUsersInRealm", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count,
                    minPrivilege,
                    maxPrivilege,
                    minDate,
                    maxDate,
                    sortBy,
                    extended}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndGetUsersInRealm(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void GetUsersInRealmAsync(string apiKey, string realmId, string offset, string count, string minPrivilege, string maxPrivilege, string minDate, string maxDate, string sortBy, bool extended) {
        this.GetUsersInRealmAsync(apiKey, realmId, offset, count, minPrivilege, maxPrivilege, minDate, maxDate, sortBy, extended, null);
    }
    
    /// <remarks/>
    public void GetUsersInRealmAsync(string apiKey, string realmId, string offset, string count, string minPrivilege, string maxPrivilege, string minDate, string maxDate, string sortBy, bool extended, object userState) {
        if ((this.GetUsersInRealmOperationCompleted == null)) {
            this.GetUsersInRealmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersInRealmOperationCompleted);
        }
        this.InvokeAsync("GetUsersInRealm", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count,
                    minPrivilege,
                    maxPrivilege,
                    minDate,
                    maxDate,
                    sortBy,
                    extended}, this.GetUsersInRealmOperationCompleted, userState);
    }
    
    private void OnGetUsersInRealmOperationCompleted(object arg) {
        if ((this.GetUsersInRealmCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetUsersInRealmCompleted(this, new GetUsersInRealmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("frames")]
    public ArrayOfAnything LatestFramesAcrossRealm(string apiKey, string realmId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count) {
        object[] results = this.Invoke("LatestFramesAcrossRealm", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLatestFramesAcrossRealm(string apiKey, string realmId, string offset, string count, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LatestFramesAcrossRealm", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndLatestFramesAcrossRealm(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void LatestFramesAcrossRealmAsync(string apiKey, string realmId, string offset, string count) {
        this.LatestFramesAcrossRealmAsync(apiKey, realmId, offset, count, null);
    }
    
    /// <remarks/>
    public void LatestFramesAcrossRealmAsync(string apiKey, string realmId, string offset, string count, object userState) {
        if ((this.LatestFramesAcrossRealmOperationCompleted == null)) {
            this.LatestFramesAcrossRealmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLatestFramesAcrossRealmOperationCompleted);
        }
        this.InvokeAsync("LatestFramesAcrossRealm", new object[] {
                    apiKey,
                    realmId,
                    offset,
                    count}, this.LatestFramesAcrossRealmOperationCompleted, userState);
    }
    
    private void OnLatestFramesAcrossRealmOperationCompleted(object arg) {
        if ((this.LatestFramesAcrossRealmCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LatestFramesAcrossRealmCompleted(this, new LatestFramesAcrossRealmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("frames")]
    public ArrayOfAnything LatestFramesForUser(string apiKey, string screenName, string realmId) {
        object[] results = this.Invoke("LatestFramesForUser", new object[] {
                    apiKey,
                    screenName,
                    realmId});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLatestFramesForUser(string apiKey, string screenName, string realmId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LatestFramesForUser", new object[] {
                    apiKey,
                    screenName,
                    realmId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndLatestFramesForUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void LatestFramesForUserAsync(string apiKey, string screenName, string realmId) {
        this.LatestFramesForUserAsync(apiKey, screenName, realmId, null);
    }
    
    /// <remarks/>
    public void LatestFramesForUserAsync(string apiKey, string screenName, string realmId, object userState) {
        if ((this.LatestFramesForUserOperationCompleted == null)) {
            this.LatestFramesForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLatestFramesForUserOperationCompleted);
        }
        this.InvokeAsync("LatestFramesForUser", new object[] {
                    apiKey,
                    screenName,
                    realmId}, this.LatestFramesForUserOperationCompleted, userState);
    }
    
    private void OnLatestFramesForUserOperationCompleted(object arg) {
        if ((this.LatestFramesForUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LatestFramesForUserCompleted(this, new LatestFramesForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object Login(string apiKey, string screenName, string password, string realmId, string cellblockId, bool clear) {
        object[] results = this.Invoke("Login", new object[] {
                    apiKey,
                    screenName,
                    password,
                    realmId,
                    cellblockId,
                    clear});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLogin(string apiKey, string screenName, string password, string realmId, string cellblockId, bool clear, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Login", new object[] {
                    apiKey,
                    screenName,
                    password,
                    realmId,
                    cellblockId,
                    clear}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void LoginAsync(string apiKey, string screenName, string password, string realmId, string cellblockId, bool clear) {
        this.LoginAsync(apiKey, screenName, password, realmId, cellblockId, clear, null);
    }
    
    /// <remarks/>
    public void LoginAsync(string apiKey, string screenName, string password, string realmId, string cellblockId, bool clear, object userState) {
        if ((this.LoginOperationCompleted == null)) {
            this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
        }
        this.InvokeAsync("Login", new object[] {
                    apiKey,
                    screenName,
                    password,
                    realmId,
                    cellblockId,
                    clear}, this.LoginOperationCompleted, userState);
    }
    
    private void OnLoginOperationCompleted(object arg) {
        if ((this.LoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object Logout(string apiKey) {
        object[] results = this.Invoke("Logout", new object[] {
                    apiKey});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLogout(string apiKey, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Logout", new object[] {
                    apiKey}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndLogout(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void LogoutAsync(string apiKey) {
        this.LogoutAsync(apiKey, null);
    }
    
    /// <remarks/>
    public void LogoutAsync(string apiKey, object userState) {
        if ((this.LogoutOperationCompleted == null)) {
            this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
        }
        this.InvokeAsync("Logout", new object[] {
                    apiKey}, this.LogoutOperationCompleted, userState);
    }
    
    private void OnLogoutOperationCompleted(object arg) {
        if ((this.LogoutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("frames")]
    public ArrayOfString LookupFrames(string apiKey, string id, string sourceAddress, string context) {
        object[] results = this.Invoke("LookupFrames", new object[] {
                    apiKey,
                    id,
                    sourceAddress,
                    context});
        return ((ArrayOfString)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLookupFrames(string apiKey, string id, string sourceAddress, string context, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LookupFrames", new object[] {
                    apiKey,
                    id,
                    sourceAddress,
                    context}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfString EndLookupFrames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfString)(results[0]));
    }
    
    /// <remarks/>
    public void LookupFramesAsync(string apiKey, string id, string sourceAddress, string context) {
        this.LookupFramesAsync(apiKey, id, sourceAddress, context, null);
    }
    
    /// <remarks/>
    public void LookupFramesAsync(string apiKey, string id, string sourceAddress, string context, object userState) {
        if ((this.LookupFramesOperationCompleted == null)) {
            this.LookupFramesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLookupFramesOperationCompleted);
        }
        this.InvokeAsync("LookupFrames", new object[] {
                    apiKey,
                    id,
                    sourceAddress,
                    context}, this.LookupFramesOperationCompleted, userState);
    }
    
    private void OnLookupFramesOperationCompleted(object arg) {
        if ((this.LookupFramesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LookupFramesCompleted(this, new LookupFramesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object ModerateImageFilter(string apiKey, string realmId, string frameId, string action) {
        object[] results = this.Invoke("ModerateImageFilter", new object[] {
                    apiKey,
                    realmId,
                    frameId,
                    action});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginModerateImageFilter(string apiKey, string realmId, string frameId, string action, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ModerateImageFilter", new object[] {
                    apiKey,
                    realmId,
                    frameId,
                    action}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndModerateImageFilter(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void ModerateImageFilterAsync(string apiKey, string realmId, string frameId, string action) {
        this.ModerateImageFilterAsync(apiKey, realmId, frameId, action, null);
    }
    
    /// <remarks/>
    public void ModerateImageFilterAsync(string apiKey, string realmId, string frameId, string action, object userState) {
        if ((this.ModerateImageFilterOperationCompleted == null)) {
            this.ModerateImageFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModerateImageFilterOperationCompleted);
        }
        this.InvokeAsync("ModerateImageFilter", new object[] {
                    apiKey,
                    realmId,
                    frameId,
                    action}, this.ModerateImageFilterOperationCompleted, userState);
    }
    
    private void OnModerateImageFilterOperationCompleted(object arg) {
        if ((this.ModerateImageFilterCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ModerateImageFilterCompleted(this, new ModerateImageFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("state")]
    public object More(string apiKey, string id, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string direction, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string maxWIndex, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string lastIndex, out ArrayOfAnything frames) {
        object[] results = this.Invoke("More", new object[] {
                    apiKey,
                    id,
                    direction,
                    maxWIndex,
                    lastIndex});
        frames = ((ArrayOfAnything)(results[1]));
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginMore(string apiKey, string id, string direction, string maxWIndex, string lastIndex, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("More", new object[] {
                    apiKey,
                    id,
                    direction,
                    maxWIndex,
                    lastIndex}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndMore(System.IAsyncResult asyncResult, out ArrayOfAnything frames) {
        object[] results = this.EndInvoke(asyncResult);
        frames = ((ArrayOfAnything)(results[1]));
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void MoreAsync(string apiKey, string id, string direction, string maxWIndex, string lastIndex) {
        this.MoreAsync(apiKey, id, direction, maxWIndex, lastIndex, null);
    }
    
    /// <remarks/>
    public void MoreAsync(string apiKey, string id, string direction, string maxWIndex, string lastIndex, object userState) {
        if ((this.MoreOperationCompleted == null)) {
            this.MoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoreOperationCompleted);
        }
        this.InvokeAsync("More", new object[] {
                    apiKey,
                    id,
                    direction,
                    maxWIndex,
                    lastIndex}, this.MoreOperationCompleted, userState);
    }
    
    private void OnMoreOperationCompleted(object arg) {
        if ((this.MoreCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.MoreCompleted(this, new MoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object MoveApprovedFrame(string apiKey, string id, string newPosition) {
        object[] results = this.Invoke("MoveApprovedFrame", new object[] {
                    apiKey,
                    id,
                    newPosition});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginMoveApprovedFrame(string apiKey, string id, string newPosition, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("MoveApprovedFrame", new object[] {
                    apiKey,
                    id,
                    newPosition}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndMoveApprovedFrame(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void MoveApprovedFrameAsync(string apiKey, string id, string newPosition) {
        this.MoveApprovedFrameAsync(apiKey, id, newPosition, null);
    }
    
    /// <remarks/>
    public void MoveApprovedFrameAsync(string apiKey, string id, string newPosition, object userState) {
        if ((this.MoveApprovedFrameOperationCompleted == null)) {
            this.MoveApprovedFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveApprovedFrameOperationCompleted);
        }
        this.InvokeAsync("MoveApprovedFrame", new object[] {
                    apiKey,
                    id,
                    newPosition}, this.MoveApprovedFrameOperationCompleted, userState);
    }
    
    private void OnMoveApprovedFrameOperationCompleted(object arg) {
        if ((this.MoveApprovedFrameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.MoveApprovedFrameCompleted(this, new MoveApprovedFrameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("count", DataType="integer")]
    public string NumAcceptedFrames(string apiKey, string id) {
        object[] results = this.Invoke("NumAcceptedFrames", new object[] {
                    apiKey,
                    id});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginNumAcceptedFrames(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("NumAcceptedFrames", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndNumAcceptedFrames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void NumAcceptedFramesAsync(string apiKey, string id) {
        this.NumAcceptedFramesAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void NumAcceptedFramesAsync(string apiKey, string id, object userState) {
        if ((this.NumAcceptedFramesOperationCompleted == null)) {
            this.NumAcceptedFramesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNumAcceptedFramesOperationCompleted);
        }
        this.InvokeAsync("NumAcceptedFrames", new object[] {
                    apiKey,
                    id}, this.NumAcceptedFramesOperationCompleted, userState);
    }
    
    private void OnNumAcceptedFramesOperationCompleted(object arg) {
        if ((this.NumAcceptedFramesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.NumAcceptedFramesCompleted(this, new NumAcceptedFramesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("count", DataType="integer")]
    public string NumFrames(string apiKey, string id) {
        object[] results = this.Invoke("NumFrames", new object[] {
                    apiKey,
                    id});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginNumFrames(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("NumFrames", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndNumFrames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void NumFramesAsync(string apiKey, string id) {
        this.NumFramesAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void NumFramesAsync(string apiKey, string id, object userState) {
        if ((this.NumFramesOperationCompleted == null)) {
            this.NumFramesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNumFramesOperationCompleted);
        }
        this.InvokeAsync("NumFrames", new object[] {
                    apiKey,
                    id}, this.NumFramesOperationCompleted, userState);
    }
    
    private void OnNumFramesOperationCompleted(object arg) {
        if ((this.NumFramesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.NumFramesCompleted(this, new NumFramesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("count", DataType="integer")]
    public string NumPendingFrames(string apiKey, string id) {
        object[] results = this.Invoke("NumPendingFrames", new object[] {
                    apiKey,
                    id});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginNumPendingFrames(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("NumPendingFrames", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndNumPendingFrames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void NumPendingFramesAsync(string apiKey, string id) {
        this.NumPendingFramesAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void NumPendingFramesAsync(string apiKey, string id, object userState) {
        if ((this.NumPendingFramesOperationCompleted == null)) {
            this.NumPendingFramesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNumPendingFramesOperationCompleted);
        }
        this.InvokeAsync("NumPendingFrames", new object[] {
                    apiKey,
                    id}, this.NumPendingFramesOperationCompleted, userState);
    }
    
    private void OnNumPendingFramesOperationCompleted(object arg) {
        if ((this.NumPendingFramesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.NumPendingFramesCompleted(this, new NumPendingFramesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object ParseSpreadsheet(string apiKey, string handle) {
        object[] results = this.Invoke("ParseSpreadsheet", new object[] {
                    apiKey,
                    handle});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginParseSpreadsheet(string apiKey, string handle, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ParseSpreadsheet", new object[] {
                    apiKey,
                    handle}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndParseSpreadsheet(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void ParseSpreadsheetAsync(string apiKey, string handle) {
        this.ParseSpreadsheetAsync(apiKey, handle, null);
    }
    
    /// <remarks/>
    public void ParseSpreadsheetAsync(string apiKey, string handle, object userState) {
        if ((this.ParseSpreadsheetOperationCompleted == null)) {
            this.ParseSpreadsheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnParseSpreadsheetOperationCompleted);
        }
        this.InvokeAsync("ParseSpreadsheet", new object[] {
                    apiKey,
                    handle}, this.ParseSpreadsheetOperationCompleted, userState);
    }
    
    private void OnParseSpreadsheetOperationCompleted(object arg) {
        if ((this.ParseSpreadsheetCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ParseSpreadsheetCompleted(this, new ParseSpreadsheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("frames")]
    public ArrayOfAnything PendingFrameInfoForCellblock(string apiKey, string id, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string offset, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string count) {
        object[] results = this.Invoke("PendingFrameInfoForCellblock", new object[] {
                    apiKey,
                    id,
                    offset,
                    count});
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginPendingFrameInfoForCellblock(string apiKey, string id, string offset, string count, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("PendingFrameInfoForCellblock", new object[] {
                    apiKey,
                    id,
                    offset,
                    count}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfAnything EndPendingFrameInfoForCellblock(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfAnything)(results[0]));
    }
    
    /// <remarks/>
    public void PendingFrameInfoForCellblockAsync(string apiKey, string id, string offset, string count) {
        this.PendingFrameInfoForCellblockAsync(apiKey, id, offset, count, null);
    }
    
    /// <remarks/>
    public void PendingFrameInfoForCellblockAsync(string apiKey, string id, string offset, string count, object userState) {
        if ((this.PendingFrameInfoForCellblockOperationCompleted == null)) {
            this.PendingFrameInfoForCellblockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPendingFrameInfoForCellblockOperationCompleted);
        }
        this.InvokeAsync("PendingFrameInfoForCellblock", new object[] {
                    apiKey,
                    id,
                    offset,
                    count}, this.PendingFrameInfoForCellblockOperationCompleted, userState);
    }
    
    private void OnPendingFrameInfoForCellblockOperationCompleted(object arg) {
        if ((this.PendingFrameInfoForCellblockCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PendingFrameInfoForCellblockCompleted(this, new PendingFrameInfoForCellblockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("msg")]
    public string Ping(string apiKey, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string num, string responsePage) {
        object[] results = this.Invoke("Ping", new object[] {
                    apiKey,
                    num,
                    responsePage});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginPing(string apiKey, string num, string responsePage, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Ping", new object[] {
                    apiKey,
                    num,
                    responsePage}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndPing(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void PingAsync(string apiKey, string num, string responsePage) {
        this.PingAsync(apiKey, num, responsePage, null);
    }
    
    /// <remarks/>
    public void PingAsync(string apiKey, string num, string responsePage, object userState) {
        if ((this.PingOperationCompleted == null)) {
            this.PingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPingOperationCompleted);
        }
        this.InvokeAsync("Ping", new object[] {
                    apiKey,
                    num,
                    responsePage}, this.PingOperationCompleted, userState);
    }
    
    private void OnPingOperationCompleted(object arg) {
        if ((this.PingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PingCompleted(this, new PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object PostComment(string apiKey, string comment, string id, string realmName, string userName, string frameId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string index, string source) {
        object[] results = this.Invoke("PostComment", new object[] {
                    apiKey,
                    comment,
                    id,
                    realmName,
                    userName,
                    frameId,
                    index,
                    source});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginPostComment(string apiKey, string comment, string id, string realmName, string userName, string frameId, string index, string source, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("PostComment", new object[] {
                    apiKey,
                    comment,
                    id,
                    realmName,
                    userName,
                    frameId,
                    index,
                    source}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndPostComment(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void PostCommentAsync(string apiKey, string comment, string id, string realmName, string userName, string frameId, string index, string source) {
        this.PostCommentAsync(apiKey, comment, id, realmName, userName, frameId, index, source, null);
    }
    
    /// <remarks/>
    public void PostCommentAsync(string apiKey, string comment, string id, string realmName, string userName, string frameId, string index, string source, object userState) {
        if ((this.PostCommentOperationCompleted == null)) {
            this.PostCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostCommentOperationCompleted);
        }
        this.InvokeAsync("PostComment", new object[] {
                    apiKey,
                    comment,
                    id,
                    realmName,
                    userName,
                    frameId,
                    index,
                    source}, this.PostCommentOperationCompleted, userState);
    }
    
    private void OnPostCommentOperationCompleted(object arg) {
        if ((this.PostCommentCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PostCommentCompleted(this, new PostCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void PublishCellblockEmailAddress(string apiKey, string id, bool publish) {
        this.Invoke("PublishCellblockEmailAddress", new object[] {
                    apiKey,
                    id,
                    publish});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginPublishCellblockEmailAddress(string apiKey, string id, bool publish, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("PublishCellblockEmailAddress", new object[] {
                    apiKey,
                    id,
                    publish}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndPublishCellblockEmailAddress(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void PublishCellblockEmailAddressAsync(string apiKey, string id, bool publish) {
        this.PublishCellblockEmailAddressAsync(apiKey, id, publish, null);
    }
    
    /// <remarks/>
    public void PublishCellblockEmailAddressAsync(string apiKey, string id, bool publish, object userState) {
        if ((this.PublishCellblockEmailAddressOperationCompleted == null)) {
            this.PublishCellblockEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPublishCellblockEmailAddressOperationCompleted);
        }
        this.InvokeAsync("PublishCellblockEmailAddress", new object[] {
                    apiKey,
                    id,
                    publish}, this.PublishCellblockEmailAddressOperationCompleted, userState);
    }
    
    private void OnPublishCellblockEmailAddressOperationCompleted(object arg) {
        if ((this.PublishCellblockEmailAddressCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.PublishCellblockEmailAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object RealmLogin(string apiKey, string realmId, string realmPassword, bool clear) {
        object[] results = this.Invoke("RealmLogin", new object[] {
                    apiKey,
                    realmId,
                    realmPassword,
                    clear});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRealmLogin(string apiKey, string realmId, string realmPassword, bool clear, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RealmLogin", new object[] {
                    apiKey,
                    realmId,
                    realmPassword,
                    clear}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndRealmLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void RealmLoginAsync(string apiKey, string realmId, string realmPassword, bool clear) {
        this.RealmLoginAsync(apiKey, realmId, realmPassword, clear, null);
    }
    
    /// <remarks/>
    public void RealmLoginAsync(string apiKey, string realmId, string realmPassword, bool clear, object userState) {
        if ((this.RealmLoginOperationCompleted == null)) {
            this.RealmLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRealmLoginOperationCompleted);
        }
        this.InvokeAsync("RealmLogin", new object[] {
                    apiKey,
                    realmId,
                    realmPassword,
                    clear}, this.RealmLoginOperationCompleted, userState);
    }
    
    private void OnRealmLoginOperationCompleted(object arg) {
        if ((this.RealmLoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RealmLoginCompleted(this, new RealmLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void RefreshExternalFrame(string apiKey, string id) {
        this.Invoke("RefreshExternalFrame", new object[] {
                    apiKey,
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRefreshExternalFrame(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RefreshExternalFrame", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRefreshExternalFrame(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RefreshExternalFrameAsync(string apiKey, string id) {
        this.RefreshExternalFrameAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void RefreshExternalFrameAsync(string apiKey, string id, object userState) {
        if ((this.RefreshExternalFrameOperationCompleted == null)) {
            this.RefreshExternalFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshExternalFrameOperationCompleted);
        }
        this.InvokeAsync("RefreshExternalFrame", new object[] {
                    apiKey,
                    id}, this.RefreshExternalFrameOperationCompleted, userState);
    }
    
    private void OnRefreshExternalFrameOperationCompleted(object arg) {
        if ((this.RefreshExternalFrameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RefreshExternalFrameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void RotateFrameLeft(string apiKey, string id) {
        this.Invoke("RotateFrameLeft", new object[] {
                    apiKey,
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRotateFrameLeft(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RotateFrameLeft", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRotateFrameLeft(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RotateFrameLeftAsync(string apiKey, string id) {
        this.RotateFrameLeftAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void RotateFrameLeftAsync(string apiKey, string id, object userState) {
        if ((this.RotateFrameLeftOperationCompleted == null)) {
            this.RotateFrameLeftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRotateFrameLeftOperationCompleted);
        }
        this.InvokeAsync("RotateFrameLeft", new object[] {
                    apiKey,
                    id}, this.RotateFrameLeftOperationCompleted, userState);
    }
    
    private void OnRotateFrameLeftOperationCompleted(object arg) {
        if ((this.RotateFrameLeftCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RotateFrameLeftCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void RotateFrameRight(string apiKey, string id) {
        this.Invoke("RotateFrameRight", new object[] {
                    apiKey,
                    id});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRotateFrameRight(string apiKey, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RotateFrameRight", new object[] {
                    apiKey,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRotateFrameRight(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RotateFrameRightAsync(string apiKey, string id) {
        this.RotateFrameRightAsync(apiKey, id, null);
    }
    
    /// <remarks/>
    public void RotateFrameRightAsync(string apiKey, string id, object userState) {
        if ((this.RotateFrameRightOperationCompleted == null)) {
            this.RotateFrameRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRotateFrameRightOperationCompleted);
        }
        this.InvokeAsync("RotateFrameRight", new object[] {
                    apiKey,
                    id}, this.RotateFrameRightOperationCompleted, userState);
    }
    
    private void OnRotateFrameRightOperationCompleted(object arg) {
        if ((this.RotateFrameRightCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RotateFrameRightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("response")]
    public string SendCellblockToPhone(string apiKey, string id, string phone, string carrier, string format, string serviceKey, string pageName, string frameId) {
        object[] results = this.Invoke("SendCellblockToPhone", new object[] {
                    apiKey,
                    id,
                    phone,
                    carrier,
                    format,
                    serviceKey,
                    pageName,
                    frameId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSendCellblockToPhone(string apiKey, string id, string phone, string carrier, string format, string serviceKey, string pageName, string frameId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SendCellblockToPhone", new object[] {
                    apiKey,
                    id,
                    phone,
                    carrier,
                    format,
                    serviceKey,
                    pageName,
                    frameId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndSendCellblockToPhone(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void SendCellblockToPhoneAsync(string apiKey, string id, string phone, string carrier, string format, string serviceKey, string pageName, string frameId) {
        this.SendCellblockToPhoneAsync(apiKey, id, phone, carrier, format, serviceKey, pageName, frameId, null);
    }
    
    /// <remarks/>
    public void SendCellblockToPhoneAsync(string apiKey, string id, string phone, string carrier, string format, string serviceKey, string pageName, string frameId, object userState) {
        if ((this.SendCellblockToPhoneOperationCompleted == null)) {
            this.SendCellblockToPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCellblockToPhoneOperationCompleted);
        }
        this.InvokeAsync("SendCellblockToPhone", new object[] {
                    apiKey,
                    id,
                    phone,
                    carrier,
                    format,
                    serviceKey,
                    pageName,
                    frameId}, this.SendCellblockToPhoneOperationCompleted, userState);
    }
    
    private void OnSendCellblockToPhoneOperationCompleted(object arg) {
        if ((this.SendCellblockToPhoneCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SendCellblockToPhoneCompleted(this, new SendCellblockToPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetActiveAdCampaign(string apiKey, string realmId, string campaignId) {
        this.Invoke("SetActiveAdCampaign", new object[] {
                    apiKey,
                    realmId,
                    campaignId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetActiveAdCampaign(string apiKey, string realmId, string campaignId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetActiveAdCampaign", new object[] {
                    apiKey,
                    realmId,
                    campaignId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetActiveAdCampaign(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetActiveAdCampaignAsync(string apiKey, string realmId, string campaignId) {
        this.SetActiveAdCampaignAsync(apiKey, realmId, campaignId, null);
    }
    
    /// <remarks/>
    public void SetActiveAdCampaignAsync(string apiKey, string realmId, string campaignId, object userState) {
        if ((this.SetActiveAdCampaignOperationCompleted == null)) {
            this.SetActiveAdCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetActiveAdCampaignOperationCompleted);
        }
        this.InvokeAsync("SetActiveAdCampaign", new object[] {
                    apiKey,
                    realmId,
                    campaignId}, this.SetActiveAdCampaignOperationCompleted, userState);
    }
    
    private void OnSetActiveAdCampaignOperationCompleted(object arg) {
        if ((this.SetActiveAdCampaignCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetActiveAdCampaignCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object SetAnnotation(
                string apiKey, 
                string frameId, 
                string text, 
                string font, 
                string fontColor, 
                string fontSize, 
                string fontEffect, 
                string fontStyle, 
                string xLocation, 
                string yLocation, 
                string xAlign, 
                string yAlign, 
                bool replace, 
                [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string annotationId, 
                string save, 
                string imageURI, 
                bool scale) {
        object[] results = this.Invoke("SetAnnotation", new object[] {
                    apiKey,
                    frameId,
                    text,
                    font,
                    fontColor,
                    fontSize,
                    fontEffect,
                    fontStyle,
                    xLocation,
                    yLocation,
                    xAlign,
                    yAlign,
                    replace,
                    annotationId,
                    save,
                    imageURI,
                    scale});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetAnnotation(
                string apiKey, 
                string frameId, 
                string text, 
                string font, 
                string fontColor, 
                string fontSize, 
                string fontEffect, 
                string fontStyle, 
                string xLocation, 
                string yLocation, 
                string xAlign, 
                string yAlign, 
                bool replace, 
                string annotationId, 
                string save, 
                string imageURI, 
                bool scale, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("SetAnnotation", new object[] {
                    apiKey,
                    frameId,
                    text,
                    font,
                    fontColor,
                    fontSize,
                    fontEffect,
                    fontStyle,
                    xLocation,
                    yLocation,
                    xAlign,
                    yAlign,
                    replace,
                    annotationId,
                    save,
                    imageURI,
                    scale}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndSetAnnotation(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void SetAnnotationAsync(
                string apiKey, 
                string frameId, 
                string text, 
                string font, 
                string fontColor, 
                string fontSize, 
                string fontEffect, 
                string fontStyle, 
                string xLocation, 
                string yLocation, 
                string xAlign, 
                string yAlign, 
                bool replace, 
                string annotationId, 
                string save, 
                string imageURI, 
                bool scale) {
        this.SetAnnotationAsync(apiKey, frameId, text, font, fontColor, fontSize, fontEffect, fontStyle, xLocation, yLocation, xAlign, yAlign, replace, annotationId, save, imageURI, scale, null);
    }
    
    /// <remarks/>
    public void SetAnnotationAsync(
                string apiKey, 
                string frameId, 
                string text, 
                string font, 
                string fontColor, 
                string fontSize, 
                string fontEffect, 
                string fontStyle, 
                string xLocation, 
                string yLocation, 
                string xAlign, 
                string yAlign, 
                bool replace, 
                string annotationId, 
                string save, 
                string imageURI, 
                bool scale, 
                object userState) {
        if ((this.SetAnnotationOperationCompleted == null)) {
            this.SetAnnotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAnnotationOperationCompleted);
        }
        this.InvokeAsync("SetAnnotation", new object[] {
                    apiKey,
                    frameId,
                    text,
                    font,
                    fontColor,
                    fontSize,
                    fontEffect,
                    fontStyle,
                    xLocation,
                    yLocation,
                    xAlign,
                    yAlign,
                    replace,
                    annotationId,
                    save,
                    imageURI,
                    scale}, this.SetAnnotationOperationCompleted, userState);
    }
    
    private void OnSetAnnotationOperationCompleted(object arg) {
        if ((this.SetAnnotationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetAnnotationCompleted(this, new SetAnnotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetCellblockAttributeValue(string apiKey, string id, string attributeName, string attributeValue) {
        this.Invoke("SetCellblockAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName,
                    attributeValue});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetCellblockAttributeValue(string apiKey, string id, string attributeName, string attributeValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetCellblockAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName,
                    attributeValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetCellblockAttributeValue(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetCellblockAttributeValueAsync(string apiKey, string id, string attributeName, string attributeValue) {
        this.SetCellblockAttributeValueAsync(apiKey, id, attributeName, attributeValue, null);
    }
    
    /// <remarks/>
    public void SetCellblockAttributeValueAsync(string apiKey, string id, string attributeName, string attributeValue, object userState) {
        if ((this.SetCellblockAttributeValueOperationCompleted == null)) {
            this.SetCellblockAttributeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCellblockAttributeValueOperationCompleted);
        }
        this.InvokeAsync("SetCellblockAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName,
                    attributeValue}, this.SetCellblockAttributeValueOperationCompleted, userState);
    }
    
    private void OnSetCellblockAttributeValueOperationCompleted(object arg) {
        if ((this.SetCellblockAttributeValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetCellblockAttributeValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object SetCellblockInfo(string apiKey, string id, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string playMode, string message, bool preview, string name, bool publicUpload, string tags, bool receiptEnabled, string receiptSubject, string receiptBody, string email, bool previewComments, bool publishEmailAddress, bool acceptingContent) {
        object[] results = this.Invoke("SetCellblockInfo", new object[] {
                    apiKey,
                    id,
                    playMode,
                    message,
                    preview,
                    name,
                    publicUpload,
                    tags,
                    receiptEnabled,
                    receiptSubject,
                    receiptBody,
                    email,
                    previewComments,
                    publishEmailAddress,
                    acceptingContent});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetCellblockInfo(
                string apiKey, 
                string id, 
                string playMode, 
                string message, 
                bool preview, 
                string name, 
                bool publicUpload, 
                string tags, 
                bool receiptEnabled, 
                string receiptSubject, 
                string receiptBody, 
                string email, 
                bool previewComments, 
                bool publishEmailAddress, 
                bool acceptingContent, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("SetCellblockInfo", new object[] {
                    apiKey,
                    id,
                    playMode,
                    message,
                    preview,
                    name,
                    publicUpload,
                    tags,
                    receiptEnabled,
                    receiptSubject,
                    receiptBody,
                    email,
                    previewComments,
                    publishEmailAddress,
                    acceptingContent}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndSetCellblockInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void SetCellblockInfoAsync(string apiKey, string id, string playMode, string message, bool preview, string name, bool publicUpload, string tags, bool receiptEnabled, string receiptSubject, string receiptBody, string email, bool previewComments, bool publishEmailAddress, bool acceptingContent) {
        this.SetCellblockInfoAsync(apiKey, id, playMode, message, preview, name, publicUpload, tags, receiptEnabled, receiptSubject, receiptBody, email, previewComments, publishEmailAddress, acceptingContent, null);
    }
    
    /// <remarks/>
    public void SetCellblockInfoAsync(
                string apiKey, 
                string id, 
                string playMode, 
                string message, 
                bool preview, 
                string name, 
                bool publicUpload, 
                string tags, 
                bool receiptEnabled, 
                string receiptSubject, 
                string receiptBody, 
                string email, 
                bool previewComments, 
                bool publishEmailAddress, 
                bool acceptingContent, 
                object userState) {
        if ((this.SetCellblockInfoOperationCompleted == null)) {
            this.SetCellblockInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCellblockInfoOperationCompleted);
        }
        this.InvokeAsync("SetCellblockInfo", new object[] {
                    apiKey,
                    id,
                    playMode,
                    message,
                    preview,
                    name,
                    publicUpload,
                    tags,
                    receiptEnabled,
                    receiptSubject,
                    receiptBody,
                    email,
                    previewComments,
                    publishEmailAddress,
                    acceptingContent}, this.SetCellblockInfoOperationCompleted, userState);
    }
    
    private void OnSetCellblockInfoOperationCompleted(object arg) {
        if ((this.SetCellblockInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetCellblockInfoCompleted(this, new SetCellblockInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object SetCellblockInfoExtended(string apiKey, string id, string receiptFromAddress, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string accessLevel, string restrictedMediaTypes) {
        object[] results = this.Invoke("SetCellblockInfoExtended", new object[] {
                    apiKey,
                    id,
                    receiptFromAddress,
                    accessLevel,
                    restrictedMediaTypes});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetCellblockInfoExtended(string apiKey, string id, string receiptFromAddress, string accessLevel, string restrictedMediaTypes, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetCellblockInfoExtended", new object[] {
                    apiKey,
                    id,
                    receiptFromAddress,
                    accessLevel,
                    restrictedMediaTypes}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndSetCellblockInfoExtended(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void SetCellblockInfoExtendedAsync(string apiKey, string id, string receiptFromAddress, string accessLevel, string restrictedMediaTypes) {
        this.SetCellblockInfoExtendedAsync(apiKey, id, receiptFromAddress, accessLevel, restrictedMediaTypes, null);
    }
    
    /// <remarks/>
    public void SetCellblockInfoExtendedAsync(string apiKey, string id, string receiptFromAddress, string accessLevel, string restrictedMediaTypes, object userState) {
        if ((this.SetCellblockInfoExtendedOperationCompleted == null)) {
            this.SetCellblockInfoExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCellblockInfoExtendedOperationCompleted);
        }
        this.InvokeAsync("SetCellblockInfoExtended", new object[] {
                    apiKey,
                    id,
                    receiptFromAddress,
                    accessLevel,
                    restrictedMediaTypes}, this.SetCellblockInfoExtendedOperationCompleted, userState);
    }
    
    private void OnSetCellblockInfoExtendedOperationCompleted(object arg) {
        if ((this.SetCellblockInfoExtendedCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetCellblockInfoExtendedCompleted(this, new SetCellblockInfoExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetDisplayModel(string apiKey, string id, string attributes, string action) {
        this.Invoke("SetDisplayModel", new object[] {
                    apiKey,
                    id,
                    attributes,
                    action});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetDisplayModel(string apiKey, string id, string attributes, string action, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetDisplayModel", new object[] {
                    apiKey,
                    id,
                    attributes,
                    action}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetDisplayModel(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetDisplayModelAsync(string apiKey, string id, string attributes, string action) {
        this.SetDisplayModelAsync(apiKey, id, attributes, action, null);
    }
    
    /// <remarks/>
    public void SetDisplayModelAsync(string apiKey, string id, string attributes, string action, object userState) {
        if ((this.SetDisplayModelOperationCompleted == null)) {
            this.SetDisplayModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDisplayModelOperationCompleted);
        }
        this.InvokeAsync("SetDisplayModel", new object[] {
                    apiKey,
                    id,
                    attributes,
                    action}, this.SetDisplayModelOperationCompleted, userState);
    }
    
    private void OnSetDisplayModelOperationCompleted(object arg) {
        if ((this.SetDisplayModelCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetDisplayModelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetExternalEmailAddress(string apiKey, string id, string email) {
        this.Invoke("SetExternalEmailAddress", new object[] {
                    apiKey,
                    id,
                    email});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetExternalEmailAddress(string apiKey, string id, string email, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetExternalEmailAddress", new object[] {
                    apiKey,
                    id,
                    email}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetExternalEmailAddress(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetExternalEmailAddressAsync(string apiKey, string id, string email) {
        this.SetExternalEmailAddressAsync(apiKey, id, email, null);
    }
    
    /// <remarks/>
    public void SetExternalEmailAddressAsync(string apiKey, string id, string email, object userState) {
        if ((this.SetExternalEmailAddressOperationCompleted == null)) {
            this.SetExternalEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetExternalEmailAddressOperationCompleted);
        }
        this.InvokeAsync("SetExternalEmailAddress", new object[] {
                    apiKey,
                    id,
                    email}, this.SetExternalEmailAddressOperationCompleted, userState);
    }
    
    private void OnSetExternalEmailAddressOperationCompleted(object arg) {
        if ((this.SetExternalEmailAddressCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetExternalEmailAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetFrameAttributeValue(string apiKey, string id, string attributeName, string attributeValue) {
        this.Invoke("SetFrameAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName,
                    attributeValue});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetFrameAttributeValue(string apiKey, string id, string attributeName, string attributeValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetFrameAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName,
                    attributeValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetFrameAttributeValue(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetFrameAttributeValueAsync(string apiKey, string id, string attributeName, string attributeValue) {
        this.SetFrameAttributeValueAsync(apiKey, id, attributeName, attributeValue, null);
    }
    
    /// <remarks/>
    public void SetFrameAttributeValueAsync(string apiKey, string id, string attributeName, string attributeValue, object userState) {
        if ((this.SetFrameAttributeValueOperationCompleted == null)) {
            this.SetFrameAttributeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFrameAttributeValueOperationCompleted);
        }
        this.InvokeAsync("SetFrameAttributeValue", new object[] {
                    apiKey,
                    id,
                    attributeName,
                    attributeValue}, this.SetFrameAttributeValueOperationCompleted, userState);
    }
    
    private void OnSetFrameAttributeValueOperationCompleted(object arg) {
        if ((this.SetFrameAttributeValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetFrameAttributeValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetFrameCaption(string apiKey, string id, string caption) {
        this.Invoke("SetFrameCaption", new object[] {
                    apiKey,
                    id,
                    caption});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetFrameCaption(string apiKey, string id, string caption, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetFrameCaption", new object[] {
                    apiKey,
                    id,
                    caption}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetFrameCaption(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetFrameCaptionAsync(string apiKey, string id, string caption) {
        this.SetFrameCaptionAsync(apiKey, id, caption, null);
    }
    
    /// <remarks/>
    public void SetFrameCaptionAsync(string apiKey, string id, string caption, object userState) {
        if ((this.SetFrameCaptionOperationCompleted == null)) {
            this.SetFrameCaptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFrameCaptionOperationCompleted);
        }
        this.InvokeAsync("SetFrameCaption", new object[] {
                    apiKey,
                    id,
                    caption}, this.SetFrameCaptionOperationCompleted, userState);
    }
    
    private void OnSetFrameCaptionOperationCompleted(object arg) {
        if ((this.SetFrameCaptionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetFrameCaptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object SetFrameInfo(string apiKey, string frameId, bool previewComments, string caption, bool visibility, string flavor, string url, string attributes) {
        object[] results = this.Invoke("SetFrameInfo", new object[] {
                    apiKey,
                    frameId,
                    previewComments,
                    caption,
                    visibility,
                    flavor,
                    url,
                    attributes});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetFrameInfo(string apiKey, string frameId, bool previewComments, string caption, bool visibility, string flavor, string url, string attributes, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetFrameInfo", new object[] {
                    apiKey,
                    frameId,
                    previewComments,
                    caption,
                    visibility,
                    flavor,
                    url,
                    attributes}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndSetFrameInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void SetFrameInfoAsync(string apiKey, string frameId, bool previewComments, string caption, bool visibility, string flavor, string url, string attributes) {
        this.SetFrameInfoAsync(apiKey, frameId, previewComments, caption, visibility, flavor, url, attributes, null);
    }
    
    /// <remarks/>
    public void SetFrameInfoAsync(string apiKey, string frameId, bool previewComments, string caption, bool visibility, string flavor, string url, string attributes, object userState) {
        if ((this.SetFrameInfoOperationCompleted == null)) {
            this.SetFrameInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFrameInfoOperationCompleted);
        }
        this.InvokeAsync("SetFrameInfo", new object[] {
                    apiKey,
                    frameId,
                    previewComments,
                    caption,
                    visibility,
                    flavor,
                    url,
                    attributes}, this.SetFrameInfoOperationCompleted, userState);
    }
    
    private void OnSetFrameInfoOperationCompleted(object arg) {
        if ((this.SetFrameInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetFrameInfoCompleted(this, new SetFrameInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetFrameVisibility(string apiKey, string id, bool visibility) {
        this.Invoke("SetFrameVisibility", new object[] {
                    apiKey,
                    id,
                    visibility});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetFrameVisibility(string apiKey, string id, bool visibility, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetFrameVisibility", new object[] {
                    apiKey,
                    id,
                    visibility}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetFrameVisibility(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetFrameVisibilityAsync(string apiKey, string id, bool visibility) {
        this.SetFrameVisibilityAsync(apiKey, id, visibility, null);
    }
    
    /// <remarks/>
    public void SetFrameVisibilityAsync(string apiKey, string id, bool visibility, object userState) {
        if ((this.SetFrameVisibilityOperationCompleted == null)) {
            this.SetFrameVisibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFrameVisibilityOperationCompleted);
        }
        this.InvokeAsync("SetFrameVisibility", new object[] {
                    apiKey,
                    id,
                    visibility}, this.SetFrameVisibilityOperationCompleted, userState);
    }
    
    private void OnSetFrameVisibilityOperationCompleted(object arg) {
        if ((this.SetFrameVisibilityCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetFrameVisibilityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object SetImageFilterInfo(string apiKey, string realmId, string corpusCellblock, string filterMode, string matchThreshold, string autolearnThreshold) {
        object[] results = this.Invoke("SetImageFilterInfo", new object[] {
                    apiKey,
                    realmId,
                    corpusCellblock,
                    filterMode,
                    matchThreshold,
                    autolearnThreshold});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetImageFilterInfo(string apiKey, string realmId, string corpusCellblock, string filterMode, string matchThreshold, string autolearnThreshold, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetImageFilterInfo", new object[] {
                    apiKey,
                    realmId,
                    corpusCellblock,
                    filterMode,
                    matchThreshold,
                    autolearnThreshold}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndSetImageFilterInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void SetImageFilterInfoAsync(string apiKey, string realmId, string corpusCellblock, string filterMode, string matchThreshold, string autolearnThreshold) {
        this.SetImageFilterInfoAsync(apiKey, realmId, corpusCellblock, filterMode, matchThreshold, autolearnThreshold, null);
    }
    
    /// <remarks/>
    public void SetImageFilterInfoAsync(string apiKey, string realmId, string corpusCellblock, string filterMode, string matchThreshold, string autolearnThreshold, object userState) {
        if ((this.SetImageFilterInfoOperationCompleted == null)) {
            this.SetImageFilterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetImageFilterInfoOperationCompleted);
        }
        this.InvokeAsync("SetImageFilterInfo", new object[] {
                    apiKey,
                    realmId,
                    corpusCellblock,
                    filterMode,
                    matchThreshold,
                    autolearnThreshold}, this.SetImageFilterInfoOperationCompleted, userState);
    }
    
    private void OnSetImageFilterInfoOperationCompleted(object arg) {
        if ((this.SetImageFilterInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetImageFilterInfoCompleted(this, new SetImageFilterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object SetLanguageFilterInfo(string apiKey, string realmId, string enabled, string word, string replacement, string suffixList, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string dictId, bool clear) {
        object[] results = this.Invoke("SetLanguageFilterInfo", new object[] {
                    apiKey,
                    realmId,
                    enabled,
                    word,
                    replacement,
                    suffixList,
                    dictId,
                    clear});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetLanguageFilterInfo(string apiKey, string realmId, string enabled, string word, string replacement, string suffixList, string dictId, bool clear, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetLanguageFilterInfo", new object[] {
                    apiKey,
                    realmId,
                    enabled,
                    word,
                    replacement,
                    suffixList,
                    dictId,
                    clear}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndSetLanguageFilterInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void SetLanguageFilterInfoAsync(string apiKey, string realmId, string enabled, string word, string replacement, string suffixList, string dictId, bool clear) {
        this.SetLanguageFilterInfoAsync(apiKey, realmId, enabled, word, replacement, suffixList, dictId, clear, null);
    }
    
    /// <remarks/>
    public void SetLanguageFilterInfoAsync(string apiKey, string realmId, string enabled, string word, string replacement, string suffixList, string dictId, bool clear, object userState) {
        if ((this.SetLanguageFilterInfoOperationCompleted == null)) {
            this.SetLanguageFilterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetLanguageFilterInfoOperationCompleted);
        }
        this.InvokeAsync("SetLanguageFilterInfo", new object[] {
                    apiKey,
                    realmId,
                    enabled,
                    word,
                    replacement,
                    suffixList,
                    dictId,
                    clear}, this.SetLanguageFilterInfoOperationCompleted, userState);
    }
    
    private void OnSetLanguageFilterInfoOperationCompleted(object arg) {
        if ((this.SetLanguageFilterInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetLanguageFilterInfoCompleted(this, new SetLanguageFilterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object SetMediaFilterInfo(string apiKey, string cellblockId, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string filterId, string type, string name, string mode, string lat1, string lon1, string radius1, string time1, string time2, bool deleteFilter) {
        object[] results = this.Invoke("SetMediaFilterInfo", new object[] {
                    apiKey,
                    cellblockId,
                    filterId,
                    type,
                    name,
                    mode,
                    lat1,
                    lon1,
                    radius1,
                    time1,
                    time2,
                    deleteFilter});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetMediaFilterInfo(string apiKey, string cellblockId, string filterId, string type, string name, string mode, string lat1, string lon1, string radius1, string time1, string time2, bool deleteFilter, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetMediaFilterInfo", new object[] {
                    apiKey,
                    cellblockId,
                    filterId,
                    type,
                    name,
                    mode,
                    lat1,
                    lon1,
                    radius1,
                    time1,
                    time2,
                    deleteFilter}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndSetMediaFilterInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void SetMediaFilterInfoAsync(string apiKey, string cellblockId, string filterId, string type, string name, string mode, string lat1, string lon1, string radius1, string time1, string time2, bool deleteFilter) {
        this.SetMediaFilterInfoAsync(apiKey, cellblockId, filterId, type, name, mode, lat1, lon1, radius1, time1, time2, deleteFilter, null);
    }
    
    /// <remarks/>
    public void SetMediaFilterInfoAsync(string apiKey, string cellblockId, string filterId, string type, string name, string mode, string lat1, string lon1, string radius1, string time1, string time2, bool deleteFilter, object userState) {
        if ((this.SetMediaFilterInfoOperationCompleted == null)) {
            this.SetMediaFilterInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMediaFilterInfoOperationCompleted);
        }
        this.InvokeAsync("SetMediaFilterInfo", new object[] {
                    apiKey,
                    cellblockId,
                    filterId,
                    type,
                    name,
                    mode,
                    lat1,
                    lon1,
                    radius1,
                    time1,
                    time2,
                    deleteFilter}, this.SetMediaFilterInfoOperationCompleted, userState);
    }
    
    private void OnSetMediaFilterInfoOperationCompleted(object arg) {
        if ((this.SetMediaFilterInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetMediaFilterInfoCompleted(this, new SetMediaFilterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetPendingFrame(string apiKey, string id, bool sideEffects) {
        this.Invoke("SetPendingFrame", new object[] {
                    apiKey,
                    id,
                    sideEffects});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetPendingFrame(string apiKey, string id, bool sideEffects, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetPendingFrame", new object[] {
                    apiKey,
                    id,
                    sideEffects}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetPendingFrame(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetPendingFrameAsync(string apiKey, string id, bool sideEffects) {
        this.SetPendingFrameAsync(apiKey, id, sideEffects, null);
    }
    
    /// <remarks/>
    public void SetPendingFrameAsync(string apiKey, string id, bool sideEffects, object userState) {
        if ((this.SetPendingFrameOperationCompleted == null)) {
            this.SetPendingFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPendingFrameOperationCompleted);
        }
        this.InvokeAsync("SetPendingFrame", new object[] {
                    apiKey,
                    id,
                    sideEffects}, this.SetPendingFrameOperationCompleted, userState);
    }
    
    private void OnSetPendingFrameOperationCompleted(object arg) {
        if ((this.SetPendingFrameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetPendingFrameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetPreviewStatus(string apiKey, string id, bool status) {
        this.Invoke("SetPreviewStatus", new object[] {
                    apiKey,
                    id,
                    status});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetPreviewStatus(string apiKey, string id, bool status, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetPreviewStatus", new object[] {
                    apiKey,
                    id,
                    status}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetPreviewStatus(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetPreviewStatusAsync(string apiKey, string id, bool status) {
        this.SetPreviewStatusAsync(apiKey, id, status, null);
    }
    
    /// <remarks/>
    public void SetPreviewStatusAsync(string apiKey, string id, bool status, object userState) {
        if ((this.SetPreviewStatusOperationCompleted == null)) {
            this.SetPreviewStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPreviewStatusOperationCompleted);
        }
        this.InvokeAsync("SetPreviewStatus", new object[] {
                    apiKey,
                    id,
                    status}, this.SetPreviewStatusOperationCompleted, userState);
    }
    
    private void OnSetPreviewStatusOperationCompleted(object arg) {
        if ((this.SetPreviewStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetPreviewStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object SetRating(string apiKey, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string rating, string id, string realmName, string userName, string frameId) {
        object[] results = this.Invoke("SetRating", new object[] {
                    apiKey,
                    rating,
                    id,
                    realmName,
                    userName,
                    frameId});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetRating(string apiKey, string rating, string id, string realmName, string userName, string frameId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetRating", new object[] {
                    apiKey,
                    rating,
                    id,
                    realmName,
                    userName,
                    frameId}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndSetRating(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void SetRatingAsync(string apiKey, string rating, string id, string realmName, string userName, string frameId) {
        this.SetRatingAsync(apiKey, rating, id, realmName, userName, frameId, null);
    }
    
    /// <remarks/>
    public void SetRatingAsync(string apiKey, string rating, string id, string realmName, string userName, string frameId, object userState) {
        if ((this.SetRatingOperationCompleted == null)) {
            this.SetRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRatingOperationCompleted);
        }
        this.InvokeAsync("SetRating", new object[] {
                    apiKey,
                    rating,
                    id,
                    realmName,
                    userName,
                    frameId}, this.SetRatingOperationCompleted, userState);
    }
    
    private void OnSetRatingOperationCompleted(object arg) {
        if ((this.SetRatingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetRatingCompleted(this, new SetRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetRealmAttributeValue(string apiKey, string realmId, string attributeName, string attributeValue) {
        this.Invoke("SetRealmAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeValue});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetRealmAttributeValue(string apiKey, string realmId, string attributeName, string attributeValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetRealmAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetRealmAttributeValue(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetRealmAttributeValueAsync(string apiKey, string realmId, string attributeName, string attributeValue) {
        this.SetRealmAttributeValueAsync(apiKey, realmId, attributeName, attributeValue, null);
    }
    
    /// <remarks/>
    public void SetRealmAttributeValueAsync(string apiKey, string realmId, string attributeName, string attributeValue, object userState) {
        if ((this.SetRealmAttributeValueOperationCompleted == null)) {
            this.SetRealmAttributeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRealmAttributeValueOperationCompleted);
        }
        this.InvokeAsync("SetRealmAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    attributeName,
                    attributeValue}, this.SetRealmAttributeValueOperationCompleted, userState);
    }
    
    private void OnSetRealmAttributeValueOperationCompleted(object arg) {
        if ((this.SetRealmAttributeValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetRealmAttributeValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    [return: System.Xml.Serialization.SoapElementAttribute("result")]
    public object SetRealmInfo(string apiKey, string realmId, bool previewComments) {
        object[] results = this.Invoke("SetRealmInfo", new object[] {
                    apiKey,
                    realmId,
                    previewComments});
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetRealmInfo(string apiKey, string realmId, bool previewComments, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetRealmInfo", new object[] {
                    apiKey,
                    realmId,
                    previewComments}, callback, asyncState);
    }
    
    /// <remarks/>
    public object EndSetRealmInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object)(results[0]));
    }
    
    /// <remarks/>
    public void SetRealmInfoAsync(string apiKey, string realmId, bool previewComments) {
        this.SetRealmInfoAsync(apiKey, realmId, previewComments, null);
    }
    
    /// <remarks/>
    public void SetRealmInfoAsync(string apiKey, string realmId, bool previewComments, object userState) {
        if ((this.SetRealmInfoOperationCompleted == null)) {
            this.SetRealmInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRealmInfoOperationCompleted);
        }
        this.InvokeAsync("SetRealmInfo", new object[] {
                    apiKey,
                    realmId,
                    previewComments}, this.SetRealmInfoOperationCompleted, userState);
    }
    
    private void OnSetRealmInfoOperationCompleted(object arg) {
        if ((this.SetRealmInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetRealmInfoCompleted(this, new SetRealmInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetUserAttributeValue(string apiKey, string realmId, string screenName, string attributeName, string attributeValue) {
        this.Invoke("SetUserAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    attributeName,
                    attributeValue});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetUserAttributeValue(string apiKey, string realmId, string screenName, string attributeName, string attributeValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetUserAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    attributeName,
                    attributeValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetUserAttributeValue(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetUserAttributeValueAsync(string apiKey, string realmId, string screenName, string attributeName, string attributeValue) {
        this.SetUserAttributeValueAsync(apiKey, realmId, screenName, attributeName, attributeValue, null);
    }
    
    /// <remarks/>
    public void SetUserAttributeValueAsync(string apiKey, string realmId, string screenName, string attributeName, string attributeValue, object userState) {
        if ((this.SetUserAttributeValueOperationCompleted == null)) {
            this.SetUserAttributeValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserAttributeValueOperationCompleted);
        }
        this.InvokeAsync("SetUserAttributeValue", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    attributeName,
                    attributeValue}, this.SetUserAttributeValueOperationCompleted, userState);
    }
    
    private void OnSetUserAttributeValueOperationCompleted(object arg) {
        if ((this.SetUserAttributeValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetUserAttributeValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void SetUserInfo(string apiKey, string realmId, string screenName, string email, string password, bool previewComments, string newScreenName, string addACL, string deleteACL, string attributes) {
        this.Invoke("SetUserInfo", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    email,
                    password,
                    previewComments,
                    newScreenName,
                    addACL,
                    deleteACL,
                    attributes});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetUserInfo(string apiKey, string realmId, string screenName, string email, string password, bool previewComments, string newScreenName, string addACL, string deleteACL, string attributes, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetUserInfo", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    email,
                    password,
                    previewComments,
                    newScreenName,
                    addACL,
                    deleteACL,
                    attributes}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSetUserInfo(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SetUserInfoAsync(string apiKey, string realmId, string screenName, string email, string password, bool previewComments, string newScreenName, string addACL, string deleteACL, string attributes) {
        this.SetUserInfoAsync(apiKey, realmId, screenName, email, password, previewComments, newScreenName, addACL, deleteACL, attributes, null);
    }
    
    /// <remarks/>
    public void SetUserInfoAsync(string apiKey, string realmId, string screenName, string email, string password, bool previewComments, string newScreenName, string addACL, string deleteACL, string attributes, object userState) {
        if ((this.SetUserInfoOperationCompleted == null)) {
            this.SetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserInfoOperationCompleted);
        }
        this.InvokeAsync("SetUserInfo", new object[] {
                    apiKey,
                    realmId,
                    screenName,
                    email,
                    password,
                    previewComments,
                    newScreenName,
                    addACL,
                    deleteACL,
                    attributes}, this.SetUserInfoOperationCompleted, userState);
    }
    
    private void OnSetUserInfoOperationCompleted(object arg) {
        if ((this.SetUserInfoCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetUserInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.cellblock.com/api/web_services/?WSDL", ResponseNamespace="http://www.cellblock.com/api/web_services/?WSDL")]
    public void UploadRemoteFrame(string apiKey, ref string id, string caption, string url, [System.Xml.Serialization.SoapElementAttribute(DataType="integer")] string index, string attributeList, string responsePage) {
        object[] results = this.Invoke("UploadRemoteFrame", new object[] {
                    apiKey,
                    id,
                    caption,
                    url,
                    index,
                    attributeList,
                    responsePage});
        id = ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUploadRemoteFrame(string apiKey, string id, string caption, string url, string index, string attributeList, string responsePage, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UploadRemoteFrame", new object[] {
                    apiKey,
                    id,
                    caption,
                    url,
                    index,
                    attributeList,
                    responsePage}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndUploadRemoteFrame(System.IAsyncResult asyncResult, out string id) {
        object[] results = this.EndInvoke(asyncResult);
        id = ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UploadRemoteFrameAsync(string apiKey, string id, string caption, string url, string index, string attributeList, string responsePage) {
        this.UploadRemoteFrameAsync(apiKey, id, caption, url, index, attributeList, responsePage, null);
    }
    
    /// <remarks/>
    public void UploadRemoteFrameAsync(string apiKey, string id, string caption, string url, string index, string attributeList, string responsePage, object userState) {
        if ((this.UploadRemoteFrameOperationCompleted == null)) {
            this.UploadRemoteFrameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadRemoteFrameOperationCompleted);
        }
        this.InvokeAsync("UploadRemoteFrame", new object[] {
                    apiKey,
                    id,
                    caption,
                    url,
                    index,
                    attributeList,
                    responsePage}, this.UploadRemoteFrameOperationCompleted, userState);
    }
    
    private void OnUploadRemoteFrameOperationCompleted(object arg) {
        if ((this.UploadRemoteFrameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UploadRemoteFrameCompleted(this, new UploadRemoteFrameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.cellblock.com/api/web_services/?WSDL")]
public partial class ArrayOfAnything {
    
    private object[] elementField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public object[] element {
        get {
            return this.elementField;
        }
        set {
            this.elementField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.cellblock.com/api/web_services/?WSDL")]
public partial class ArrayOfString {
    
    private string[] elementField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] element {
        get {
            return this.elementField;
        }
        set {
            this.elementField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void AcceptedFrameInfoForCellblockCompletedEventHandler(object sender, AcceptedFrameInfoForCellblockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AcceptedFrameInfoForCellblockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AcceptedFrameInfoForCellblockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void AdInfoForCampaignCompletedEventHandler(object sender, AdInfoForCampaignCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AdInfoForCampaignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AdInfoForCampaignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void AddExternalFrameCompletedEventHandler(object sender, AddExternalFrameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class AddExternalFrameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal AddExternalFrameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string id {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void ApprovePendingFrameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CellblockIdsForUserCompletedEventHandler(object sender, CellblockIdsForUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CellblockIdsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CellblockIdsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfString Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfString)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CellblockInfoCompletedEventHandler(object sender, CellblockInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CellblockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CellblockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void ConvertFrameCompletedEventHandler(object sender, ConvertFrameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ConvertFrameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ConvertFrameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CopyFrameCompletedEventHandler(object sender, CopyFrameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CopyFrameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CopyFrameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateAdCampaignCompletedEventHandler(object sender, CreateAdCampaignCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateAdCampaignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateAdCampaignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateCellblockCompletedEventHandler(object sender, CreateCellblockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateCellblockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateCellblockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateCellblockAttributeDefinitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateDisplayModelCompletedEventHandler(object sender, CreateDisplayModelCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateDisplayModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateDisplayModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateFrameAttributeDefinitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateRealmCompletedEventHandler(object sender, CreateRealmCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateRealmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateRealmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateRealmAttributeDefinitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateRealmCellblockCompletedEventHandler(object sender, CreateRealmCellblockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateRealmCellblockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateRealmCellblockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void CreateUserAttributeDefinitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void DeleteAdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void DeleteAdCampaignCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void DeleteAttributeDefinitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void DeleteCellblockCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void DeleteCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void DeleteDisplayModelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void DeleteFrameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void DeleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void EmailDispositionCompletedEventHandler(object sender, EmailDispositionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EmailDispositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal EmailDispositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void FrameInfoForCellblockCompletedEventHandler(object sender, FrameInfoForCellblockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FrameInfoForCellblockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FrameInfoForCellblockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetAdCampaignsCompletedEventHandler(object sender, GetAdCampaignsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAdCampaignsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAdCampaignsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetAnnotationCompletedEventHandler(object sender, GetAnnotationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAnnotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAnnotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetAttributeDefinitionsCompletedEventHandler(object sender, GetAttributeDefinitionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAttributeDefinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAttributeDefinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetCellblockAttributeValueCompletedEventHandler(object sender, GetCellblockAttributeValueCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCellblockAttributeValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCellblockAttributeValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetCellblockAttributeValuesCompletedEventHandler(object sender, GetCellblockAttributeValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCellblockAttributeValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCellblockAttributeValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetCellblockInfoCompletedEventHandler(object sender, GetCellblockInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCellblockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCellblockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetCommentsCompletedEventHandler(object sender, GetCommentsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetDisplayModelCompletedEventHandler(object sender, GetDisplayModelCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDisplayModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDisplayModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetDisplayModelsCompletedEventHandler(object sender, GetDisplayModelsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDisplayModelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDisplayModelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetDocumentationCompletedEventHandler(object sender, GetDocumentationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDocumentationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDocumentationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetEventInfoCompletedEventHandler(object sender, GetEventInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetEventInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetEventInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetFrameAttributeValueCompletedEventHandler(object sender, GetFrameAttributeValueCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetFrameAttributeValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetFrameAttributeValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetFrameAttributeValuesCompletedEventHandler(object sender, GetFrameAttributeValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetFrameAttributeValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetFrameAttributeValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetFrameInfoCompletedEventHandler(object sender, GetFrameInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetFrameInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetFrameInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetFramesNewerThanCompletedEventHandler(object sender, GetFramesNewerThanCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetFramesNewerThanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetFramesNewerThanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetImageFilterInfoCompletedEventHandler(object sender, GetImageFilterInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetImageFilterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetImageFilterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetLanguageFilterInfoCompletedEventHandler(object sender, GetLanguageFilterInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetLanguageFilterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetLanguageFilterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetMatchingCellblocksCompletedEventHandler(object sender, GetMatchingCellblocksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMatchingCellblocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetMatchingCellblocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetMatchingFramesCompletedEventHandler(object sender, GetMatchingFramesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMatchingFramesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetMatchingFramesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfString Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfString)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetMatchingUsersCompletedEventHandler(object sender, GetMatchingUsersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMatchingUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetMatchingUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetMediaFilterInfoCompletedEventHandler(object sender, GetMediaFilterInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMediaFilterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetMediaFilterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetPublicApiMethodsCompletedEventHandler(object sender, GetPublicApiMethodsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPublicApiMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPublicApiMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetRatingCompletedEventHandler(object sender, GetRatingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetRealmAttributeValueCompletedEventHandler(object sender, GetRealmAttributeValueCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetRealmAttributeValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetRealmAttributeValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetRealmAttributeValuesCompletedEventHandler(object sender, GetRealmAttributeValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetRealmAttributeValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetRealmAttributeValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetRealmCellblocksCompletedEventHandler(object sender, GetRealmCellblocksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetRealmCellblocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetRealmCellblocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetRealmInfoCompletedEventHandler(object sender, GetRealmInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetRealmInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetRealmInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetSessionInfoCompletedEventHandler(object sender, GetSessionInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetSessionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetSessionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetUserAttributeValueCompletedEventHandler(object sender, GetUserAttributeValueCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserAttributeValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUserAttributeValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetUserAttributeValuesCompletedEventHandler(object sender, GetUserAttributeValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserAttributeValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUserAttributeValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetUserCellblocksCompletedEventHandler(object sender, GetUserCellblocksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserCellblocksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUserCellblocksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetUserFramesCompletedEventHandler(object sender, GetUserFramesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserFramesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUserFramesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void GetUsersInRealmCompletedEventHandler(object sender, GetUsersInRealmCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetUsersInRealmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetUsersInRealmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void LatestFramesAcrossRealmCompletedEventHandler(object sender, LatestFramesAcrossRealmCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LatestFramesAcrossRealmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LatestFramesAcrossRealmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void LatestFramesForUserCompletedEventHandler(object sender, LatestFramesForUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LatestFramesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LatestFramesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void LookupFramesCompletedEventHandler(object sender, LookupFramesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LookupFramesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LookupFramesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfString Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfString)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void ModerateImageFilterCompletedEventHandler(object sender, ModerateImageFilterCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ModerateImageFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ModerateImageFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void MoreCompletedEventHandler(object sender, MoreCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal MoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public ArrayOfAnything frames {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void MoveApprovedFrameCompletedEventHandler(object sender, MoveApprovedFrameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class MoveApprovedFrameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal MoveApprovedFrameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void NumAcceptedFramesCompletedEventHandler(object sender, NumAcceptedFramesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class NumAcceptedFramesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal NumAcceptedFramesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void NumFramesCompletedEventHandler(object sender, NumFramesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class NumFramesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal NumFramesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void NumPendingFramesCompletedEventHandler(object sender, NumPendingFramesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class NumPendingFramesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal NumPendingFramesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void ParseSpreadsheetCompletedEventHandler(object sender, ParseSpreadsheetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ParseSpreadsheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ParseSpreadsheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void PendingFrameInfoForCellblockCompletedEventHandler(object sender, PendingFrameInfoForCellblockCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PendingFrameInfoForCellblockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal PendingFrameInfoForCellblockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfAnything Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfAnything)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void PingCompletedEventHandler(object sender, PingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal PingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void PostCommentCompletedEventHandler(object sender, PostCommentCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class PostCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal PostCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void PublishCellblockEmailAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void RealmLoginCompletedEventHandler(object sender, RealmLoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class RealmLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal RealmLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void RefreshExternalFrameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void RotateFrameLeftCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void RotateFrameRightCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SendCellblockToPhoneCompletedEventHandler(object sender, SendCellblockToPhoneCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendCellblockToPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SendCellblockToPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetActiveAdCampaignCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetAnnotationCompletedEventHandler(object sender, SetAnnotationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetAnnotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetAnnotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetCellblockAttributeValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetCellblockInfoCompletedEventHandler(object sender, SetCellblockInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetCellblockInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetCellblockInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetCellblockInfoExtendedCompletedEventHandler(object sender, SetCellblockInfoExtendedCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetCellblockInfoExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetCellblockInfoExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetDisplayModelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetExternalEmailAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetFrameAttributeValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetFrameCaptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetFrameInfoCompletedEventHandler(object sender, SetFrameInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetFrameInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetFrameInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetFrameVisibilityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetImageFilterInfoCompletedEventHandler(object sender, SetImageFilterInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetImageFilterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetImageFilterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetLanguageFilterInfoCompletedEventHandler(object sender, SetLanguageFilterInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetLanguageFilterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetLanguageFilterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetMediaFilterInfoCompletedEventHandler(object sender, SetMediaFilterInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetMediaFilterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetMediaFilterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetPendingFrameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetPreviewStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetRatingCompletedEventHandler(object sender, SetRatingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetRealmAttributeValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetRealmInfoCompletedEventHandler(object sender, SetRealmInfoCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetRealmInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetRealmInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetUserAttributeValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void SetUserInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
public delegate void UploadRemoteFrameCompletedEventHandler(object sender, UploadRemoteFrameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.21006.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UploadRemoteFrameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UploadRemoteFrameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string id {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
